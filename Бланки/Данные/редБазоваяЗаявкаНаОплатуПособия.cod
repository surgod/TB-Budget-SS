class inherited ћашина–еквизитов.Ѕазовые.бл–едактор—»нтерфейсом "Ѕазовый редактор за€вки на назначение и оплату пособи€", editor ƒанные.«а€вкаЌаЌазначениеѕособи€;

import classes  онстанты,‘ункцииѕрименени€ остант;--,‘ункцииƒанных;
import —»—2 classes  онстанты;

--{{ —войства


inobject public

  var »нтерфейс: ƒанные.инт«а€вкаЌаЌазначениеѕособи€;


--}}


inobject private

  --фреймы

  var фрейм—ведени€ќ«а€вке :TemplateFrame;
  var фреймѕолучатель :TemplateFrame;
  var фреймƒокументыѕолучател€ :TemplateFrame;
  var фреймƒокументыѕособи€ :TemplateFrame;
  var фрейм–асчет :TemplateFrame;
  var фрейм¬ыплата :TemplateFrame;

  --кнопки

  var кн«авершить :Button;



--сведени€ о за€вке

var ѕризнак«авершени€ : string = if («авершено : '«а€вка завершена',  '');
var Ќомер–еестра : string = if(ѕозици€–еестра <> nil : Str(ѕозици€–еестра.–еестр.Ќомер«аƒень), '');

--—в€занные записи

var ѕозици€–еестра : ƒокументы.‘——.ѕозици€–еестра;

var јдрес–егистрации : Ѕазовый.—правочники.јдрес;
var јдресѕроживани€ : Ѕазовый.—правочники.јдрес;
var ”достоверениеЋичности : Ѕазовый.—правочники.”достоверение;
var ƒокументќѕравеЌаѕроживание : Ѕазовый.—правочники.”достоверение;

var ЅольничныйЋист : ƒокументы. адры.ЅольничныйЋист——;

--------------------------------------------------------------------------------
--{ ќбработчики событий бланка

proc шаблон_ѕри—оздании(Context :Variant);
  inherited шаблон_ѕри—оздании(Context);
  ќбновить—писокѕол€(фрейм¬ыплата.CellByField['—пособ¬ыплаты'], “ипы—пособов¬ыплаты‘Ћ);
  ќбновить—писокѕол€(фрейм—ведени€ќ«а€вке.CellByField['“ип»нфо'], “ипы»нфо);
  ќбновить—писокѕол€(фрейм—ведени€ќ«а€вке.CellByField['ѕричинаѕерерасчета'], “ипыѕричиныѕерерасчета);
end;


proc шаблон_ѕри—читывании;
  inherited шаблон_ѕри—читывании;
  ѕрочитатьѕозицию–еестра;
  Ќайти—в€занные«аписи;
end;

proc ѕоле_ѕри–исовании (Cell: TemplateCell; Selected: Logical; var Color: Integer; var FieldColor: Integer; Font: Font);
  if (Cell.Contents = 'ѕризнак«авершени€') :
    if («авершено) :
      Cell.Color = clYellow;
      return;
    else
      Cell.Color = clNoColor;
      return;
    fi;
  elsif (Cell.Contents = 'Ќомер–еестра') :
    if (ѕозици€–еестра <> nil) :
      Cell.Color = clYellow;
      return;
    else
      Cell.Color = clNoColor;
      return;
    fi;
  end;
  if (Cell.Style.Name = 'ѕоле ввода'):
    if Cell.Enabled: inherited ѕри–исовании_ акѕоле¬вода (Cell, Selected, Color, FieldColor, Font);
    else             inherited ѕри–исовании_ ак«апрещенное (Cell, Selected, Color, FieldColor, Font);
    fi;
  elsif (Cell.Style.Name = 'ѕоле выбора'):
    if Cell.Enabled: inherited ѕри–исовании_ акѕоле¬ыбора (Cell, Selected, Color, FieldColor, Font);
    else             inherited ѕри–исовании_ ак«апрещенное (Cell, Selected, Color, FieldColor, Font);
    fi;
  fi;
end;



func ѕолејдрес_ѕри¬ыводе (Cell: TemplateCell; Value: Variant; Action: Template.OutputTypes; var Format: String): Variant;
    if (Cell.Owner.Name = 'секцјдрес–ег' ) :
      return —правочники.интјдрес—оц—трах.јдрес—трокойѕо«аписи(јдрес–егистрации);
    elsif (Cell.Owner.Name = 'секцјдресѕрож' ) :
      return —правочники.интјдрес—оц—трах.јдрес—трокойѕо«аписи(јдресѕроживани€);
    fi;
end;

func ѕолеƒокументыѕолучател€_ѕри¬ыводе (Cell: TemplateCell; Value: Variant; Action: Template.OutputTypes; var Format: String): Variant;
    if (Cell.Owner.Name = 'секц”дЋичн' ) :
      return —правочники.инт”достоверение—оц—трах.ѕолеѕо»мени(”достоверениеЋичности,Cell.Contents);
    elsif (Cell.Owner.Name = 'секцƒокѕрож' ) :
      return —правочники.инт”достоверение—оц—трах.ѕолеѕо»мени(ƒокументќѕравеЌаѕроживание,Cell.Contents);
    fi;
end;



func ѕолејдрес_ѕриЌажатии(Cell:TemplateCell; Action : Template.ClickTypes) : Logical;
  Result = false;
  if (Cell.Owner.Name = 'секцјдрес–ег' ) :
    ќткрытьјдрес–егистрации;
  elsif (Cell.Owner.Name = 'секцјдресѕрож' ) :
    if (Cell.Contents = 'ќткрыть') :
      ќткрытьјдресѕроживани€;
    elsif (Cell.Contents = '”далить') :
      ”далитьјдресѕроживани€;
    fi;
  fi;
end;

func ѕолеƒокументѕолучател€_ѕриЌажатии(Cell:TemplateCell; Action : Template.ClickTypes) : Logical;
  Result = false;
  if (Cell.Owner.Name = 'секц”дЋичн' ) :
    ќткрытьƒокументѕолучател€(”достоверениеЋичности,“ипƒокѕолуч”дЋичн);
  elsif (Cell.Owner.Name = 'секцƒокѕрож' ) :
    if (Cell.Contents = 'ќткрыть') :
      ќткрытьƒокументѕолучател€(”достоверениеЋичности,“ипƒокѕолучѕрожив);
    elsif (Cell.Contents = '—четѕолучател€') :
      ”далитьјдресѕроживани€;
    fi;
  fi;
end;


func ѕоле¬ыплата_ѕри¬ходе(Cell :TemplateCell; Index :Integer; Action : Template.EnterTypes) :Logical;
  var locForm: BlankForm;
  var лок—трока : string;
  Result = false;
  if (Cell.Contents = 'ќткрыть') :
    лок—трока = —четѕолучател€;
    if ( cmOk = “ЅЅ_Ѕазовый.Ѕиблио.¬водЌомераЅанк—чета(лок—трока)) :
      —четѕолучател€ = лок—трока;
    fi;
  elsif (Cell.Contents = 'Ѕ» ') :
    лок—трока = Ѕ» ;
    if ( cmOk = “ЅЅ_Ѕазовый.Ѕиблио.¬водЌомераЅик(лок—трока)) :
      Ѕ»  = лок—трока;
    fi;
  elsif (Cell.Contents = 'Ќомер арты') :
    locForm = Ѕюджет_«ѕиƒƒ.—лужебные.бл¬водЌомераЅанк арты.CreateEx(Ќомер арты);
    if (cmOk = locForm.ShowEx( ,Window.ModalWindow)):
      Ќомер арты = locForm.ЌомерЅанк арты as String;
    fi;
  fi;
end;


proc кн«авершить_ѕриЌажатии (Sender: Button);
  var Note : string;
  if (кн«авершить.Caption = '«авершить') :
    --нужна проверка
     «авершено = true;
  else
    if (ѕозици€–еестра <> nil) :
      Note = 'Ќельз€ сн€ть с за€вки признак завершени€, так как она включена в реестр';
      Message(Note);
      return;
    else
      «авершено = false;
    fi;
  fi;
end;

proc кн¬–еестр_ѕриЌажатии (Sender: Button);
end;



--}

--{{ ¬спомогательные методы

proc ѕрочитатьѕозицию–еестра;
  ѕозици€–еестра = »нтерфейс.Ќайтиѕозицию–еестра;
end;

proc Ќайти—в€занные«аписи;
  јдрес–егистрации = —правочники.интјдрес—оц—трах.јдрес–егистрацииѕо«а€вке(Self.Record);
  јдресѕроживани€ = —правочники.интјдрес—оц—трах.јдресѕроживани€ѕо«а€вке(Self.Record);
  ”достоверениеЋичности = —правочники.инт”достоверение—оц—трах.”дЋичностиѕо«а€вке(Self.Record);
  ƒокументќѕравеЌаѕроживание = —правочники.инт”достоверение—оц—трах.ƒокумќѕрживанииѕо«а€вке(Self.Record);
  ЅольничныйЋист = ƒокументы. адры.интЅольничныйЋист——.ЅольничныйЋистѕо«а€вке(Self.Record);
end;

proc ќткрытьјдрес–егистрации;
  var лок»нт : —правочники.интјдрес—оц—трах;
  if (јдрес–егистрации = nil) :
    лок»нт = —правочники.интјдрес—оц—трах.—оздатьјдрес–егистрации(Self.Record);
    if (лок»нт.Record = nil) :
      return;
    fi;
    if (CmOk = —правочники.интјдрес—оц—трах.Ѕланк–едакторѕо”молчанию.ShowFormEx(лок»нт.Record , Kernel.Window.ModalWindow)):
      јдрес–егистрации = лок»нт.Record;
    fi;
  else
    —правочники.интјдрес—оц—трах.Ѕланк–едакторѕо”молчанию.ShowFormEx(јдрес–егистрации , Kernel.Window.ModalWindow);
  fi;
end;

proc ќткрытьјдресѕроживани€;
  var лок»нт : —правочники.интјдрес—оц—трах;
  if (јдресѕроживани€ = nil) :
    лок»нт = —правочники.интјдрес—оц—трах.—оздатьјдресѕроживани€(јдрес–егистрации,Self.Record);
    if (лок»нт.Record = nil) :
      return;
    fi;
    if (CmOk = —правочники.интјдрес—оц—трах.Ѕланк–едакторѕо”молчанию.ShowFormEx(лок»нт.Record , Kernel.Window.ModalWindow)):
      јдресѕроживани€ = лок»нт.Record;
    fi;
  else
    —правочники.интјдрес—оц—трах.Ѕланк–едакторѕо”молчанию.ShowFormEx(јдресѕроживани€ , Kernel.Window.ModalWindow);
  fi;

end;


proc ”далитьјдресѕроживани€;
  if (јдресѕроживани€ = nil) :
    return;
  fi;
  if (Enquiry ( , "¬ы действительно хотите удалить адрес проживани€?",["ƒа","Ќет"]) = 1 ) :
    јдресѕроживани€.Delete;
    јдресѕроживани€ = nil;
  fi;
end;


proc ќткрытьƒокументѕолучател€ (var лок”достоверение : Ѕазовый.—правочники.”достоверение; лок“ипƒокумента : integer);
  var лок»нт : —правочники.инт”достоверение—оц—трах;
  if (лок”достоверение = nil) :
    лок»нт = —правочники.инт”достоверение—оц—трах.—оздатьѕо«а€вке»“ипу(Self.Record,лок“ипƒокумента);
    if (лок»нт.Record = nil) :
      return;
    fi;
    if (CmOk = —правочники.инт”достоверение—оц—трах.Ѕланк–едакторѕо”молчанию.ShowFormEx(лок»нт.Record , Kernel.Window.ModalWindow)):
      лок”достоверение = лок»нт.Record;
    fi;
  else
    —правочники.инт”достоверение—оц—трах.Ѕланк–едакторѕо”молчанию.ShowFormEx(лок”достоверение , Kernel.Window.ModalWindow);
  fi;
end;


proc ”далитьƒокументќѕравеЌаѕроживание;
  if (ƒокументќѕравеЌаѕроживание = nil) :
    return;
  fi;
  if (Enquiry ( , "¬ы действительно хотите удалить документ о праве на проживание?",["ƒа","Ќет"]) = 1 ) :
    ƒокументќѕравеЌаѕроживание.Delete;
    ƒокументќѕравеЌаѕроживание = nil;
  fi;
end;

proc ћодифицироватьЎаблон_ѕо_«авершено;
  Template.BeginModify;
    ћодифицировать‘рейм—ведени€ќ«а€вке;
    ћодифицировать‘реймѕолучатель;
    ћодифицировать‘реймƒокументыѕолучател€;
    --«апретить¬водƒокументовѕособи€;
    --«апретить¬вод»нформацииќ–асчете;
    ћодифицировать‘рейм¬ыплата;
    -- нопкиЌаЁкран;
  Template.EndModify;
end;

proc ћодифицировать‘рейм—ведени€ќ«а€вке;
  if («авершено) :
    фрейм—ведени€ќ«а€вке.CellByField['“ип»нфо'].Enabled = false;
    фрейм—ведени€ќ«а€вке.CellByField['ѕричинаѕерерасчета'].Enabled = false;
  else
    фрейм—ведени€ќ«а€вке.CellByField['“ип»нфо'].Enabled = true;
    фрейм—ведени€ќ«а€вке.CellByField['ѕричинаѕерерасчета'].Enabled = true;
  fi;
end;

proc ћодифицировать‘реймѕолучатель;
  var лок—екц : TemplateSection;
    if («авершено) :
      фреймѕолучатель.CellByField['‘амили€ѕолучател€'].Enabled = false;
      фреймѕолучатель.CellByField['»м€ѕолучател€'].Enabled = false;
      фреймѕолучатель.CellByField['ќтчествоѕолучател€'].Enabled = false;
      фреймѕолучатель.CellByField['»ЌЌ'].Enabled = false;
      фреймѕолучатель.CellByField['—Ќ»Ћ—'].Enabled = false;
      фреймѕолучатель.CellByField['ƒата–ождени€'].Enabled = false;
      лок—екц = —екци€ѕо»мени('секцјдрес–ег',фреймѕолучатель);
      лок—екц.CellByField['ќткрыть'].Enabled = false;
      лок—екц = —екци€ѕо»мени('секцјдресѕрож',фреймѕолучатель);
      лок—екц.CellByField['ќткрыть'].Enabled = false;
      лок—екц.CellByField['”далить'].Enabled = false;
    else
      фреймѕолучатель.CellByField['‘амили€ѕолучател€'].Enabled = true;
      фреймѕолучатель.CellByField['»м€ѕолучател€'].Enabled = true;
      фреймѕолучатель.CellByField['ќтчествоѕолучател€'].Enabled = false;
      фреймѕолучатель.CellByField['»ЌЌ'].Enabled = true;
      фреймѕолучатель.CellByField['—Ќ»Ћ—'].Enabled = true;
      фреймѕолучатель.CellByField['ƒата–ождени€'].Enabled = true;
      лок—екц = —екци€ѕо»мени('секцјдрес–ег',фреймѕолучатель);
      лок—екц.CellByField['ќткрыть'].Enabled = true;
      лок—екц = —екци€ѕо»мени('секцјдресѕрож',фреймѕолучатель);
      лок—екц.CellByField['ќткрыть'].Enabled = true;
      лок—екц.CellByField['”далить'].Enabled = true;
    fi;
end;

proc ћодифицировать‘реймƒокументыѕолучател€;
  var лок—екц : TemplateSection;
    if («авершено) :
      лок—екц = —екци€ѕо»мени('секц”дЋичн',фреймƒокументыѕолучател€);
      лок—екц.CellByField['ќткрыть'].Enabled = false;
      лок—екц = —екци€ѕо»мени('секцƒокѕрож',фреймƒокументыѕолучател€);
      лок—екц.CellByField['ќткрыть'].Enabled = false;
      лок—екц.CellByField['”далить'].Enabled = false;
    else
      лок—екц = —екци€ѕо»мени('секц”дЋичн',фреймѕолучатель);
      лок—екц.CellByField['ќткрыть'].Enabled = true;
      лок—екц = —екци€ѕо»мени('секцƒокѕрож',фреймѕолучатель);
      лок—екц.CellByField['ќткрыть'].Enabled = true;
      лок—екц.CellByField['”далить'].Enabled = true;
    fi;
end;

proc ћодифицировать‘реймƒокументыѕособи€;
end;

proc ћодифицировать‘рейм–асчет;
end;

proc ћодифицировать‘рейм¬ыплата;
  if («авершено) :
    фрейм¬ыплата.CellByField['—пособ¬ыплаты'].Enabled = false;
    фрейм¬ыплата.CellByField['ЅанкЌаим'].Enabled = false;
    фрейм¬ыплата.CellByField['—четѕолучател€'].Enabled = false;
    фрейм¬ыплата.CellByField['Ѕ» '].Enabled = false;
    фрейм¬ыплата.CellByField['Ќомер арты'].Enabled = false;
  else
    фрейм¬ыплата.CellByField['—пособ¬ыплаты'].Enabled = true;
    фрейм¬ыплата.CellByField['ЅанкЌаим'].Enabled = true;
    фрейм¬ыплата.CellByField['—четѕолучател€'].Enabled = true;
    фрейм¬ыплата.CellByField['Ѕ» '].Enabled = true;
    фрейм¬ыплата.CellByField['Ќомер арты'].Enabled = true;
  fi;
end;



--})


func ѕоле_ѕри¬ыводе_«аголовокќкна‘ормы (Cell: TemplateCell; Value: Variant; Action: Template.OutputTypes; var Format: String): String;
  var aTxt: string[];
  with —»—2.—троковые‘ункции  do
    aTxt[1] = MarkInGray(Ќаше”чреждение.Ќаим);
    aTxt[2] = '«а€вка на назначение '+ »м€ѕособи€–од(“ипѕособи€)+' ';
    aTxt[3] = MarkInGray(' од за€вки '+  од);
    aTxt[4] = MarkInGray(—отрудник.»м€);
    Return ћассив—трок¬“екст(aTxt);
  end;
end;


end