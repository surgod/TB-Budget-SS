class inherited ТББ_Базовый.Базовые.БазовыйБланкДокумент "Заявление об оплате пособия соц.страх.", editor Документы.Заявление;


import classes Документы.интЗаявление,Константы;

inobject private



--фреймы

var фреймЭкран : TemplateFrame;
var фреймШаблоны : TemplateFrame;
var фреймПечать : TemplateFrame;


--------------------------------------------------------------------------------
--{ Обработчики событий бланка

proc шаблон_ПриОткрытии (Create: Logical);
  inherited шаблон_ПриОткрытии(Create);
end;



proc шаблон_ПриСчитывании;
  inherited шаблон_ПриСчитывании;
  ПрочитатьТипыПособий;
  ПрочитатьСпособВыплаты;
  БлокировкаПособий;
  ВидФормы;
end;


 proc кнОбновить_ПриНажатии(B1: Button);
    НаимТОФСС = НашеУчреждение.НаимОрганаФСС;
    ФИО_Сотрудника_ПоУмолчанию;
    ВидФормы;
 end;


--}

var ФлагПособияБЛ : logical;
var ФлагПособияБерем : logical;
var ФлагПособияРанСрок : logical;
var ФлагПособияРожд : logical;
var ФлагПособияУходРеб : logical;
var ФлагПособияТравма : logical;
var ФлагПособияОтпуск : logical;

var ФлагВыплатаБанк : logical;
var ФлагВыплатаПочта : logical;
var ФлагВыплатаИное : logical;



--{ Вспомогательные методы

proc ФИО_Сотрудника_ПоУмолчанию;
  var локФИО[] : string;
    локФИО = ФамилияИмяОтчество_Им(Сотрудник);
    Фамилия = локФИО[1];
    Имя = локФИО[2];
    Отчество = локФИО[3];
    локФИО = ФамилияИмяОтчество_Род(Сотрудник);
    Фамилия_Род = локФИО[1];
    Имя_Род = локФИО[2];
    Отчество_Род = локФИО[3];
end;

proc ПрочитатьТипыПособий;
  var i : integer;
    ФлагПособияБЛ = false;
    ФлагПособияБерем = false;
    ФлагПособияРанСрок = false;
    ФлагПособияРожд  = false;
    ФлагПособияУходРеб = false;
    ФлагПособияТравма = false;
    ФлагПособияОтпуск = false;
    for i = 1.. Self.Record.ТипыПособий.Count do
      if (Self.Record.ТипыПособий[i].ТипПособия = ТипПособияБЛ) :
        ФлагПособияБЛ = true;
      elsif (Self.Record.ТипыПособий[i].ТипПособия = ТипПособияБерем) :
        ФлагПособияБерем = true;
      elsif (Self.Record.ТипыПособий[i].ТипПособия = ТипПособияРанСрок) :
        ФлагПособияРанСрок = true;
      elsif (Self.Record.ТипыПособий[i].ТипПособия = ТипПособияРожд) :
        ФлагПособияРожд = true;
      elsif (Self.Record.ТипыПособий[i].ТипПособия = ТипПособияУходРеб) :
        ФлагПособияУходРеб = true;
      elsif (Self.Record.ТипыПособий[i].ТипПособия = ТипПособияТравма) :
        ФлагПособияТравма = true;
      elsif (Self.Record.ТипыПособий[i].ТипПособия = ТипПособияОтпуск) :
        ФлагПособияОтпуск = true;
      fi;
    end;
end;

proc ПрочитатьСпособВыплаты;
  ФлагВыплатаБанк  = false;
  ФлагВыплатаПочта  = false;
  ФлагВыплатаИное  = false;
  if (СпособВыплаты = ТипВыплатаБанк) :
    ФлагВыплатаБанк  = true;
  elsif (СпособВыплаты = ТипВыплатаПочта) :
    ФлагВыплатаПочта  = true;
  elsif (СпособВыплаты = ТипВыплатаИное) :
    ФлагВыплатаИное  = true;
  fi;
end;

proc БлокировкаПособий;
  var локСекц : TemplateSection;
    Template.BeginModify;
      локСекц = СекцияПоИмени('секцСписокПособий',фреймШаблоны);
      локСекц.КлеткаПоПолю["ФлагПособияБЛ"].Enabled = false;
      локСекц.КлеткаПоПолю["ФлагПособияБерем"].Enabled = false;
      локСекц.КлеткаПоПолю["ФлагПособияРанСрок"].Enabled = false;
      локСекц.КлеткаПоПолю["ФлагПособияРожд"].Enabled = false;
      локСекц.КлеткаПоПолю["ФлагПособияУходРеб"].Enabled = false;
      локСекц.КлеткаПоПолю["ФлагПособияТравма"].Enabled = false;
      локСекц.КлеткаПоПолю["ФлагПособияОтпуск"].Enabled = false;
      if (ТипРеестра = ТипРеестраБЛ) :
        локСекц.КлеткаПоПолю["ФлагПособияБЛ"].Enabled = true;
        локСекц.КлеткаПоПолю["ФлагПособияБерем"].Enabled = true;
        локСекц.КлеткаПоПолю["ФлагПособияРанСрок"].Enabled = true;
        локСекц.КлеткаПоПолю["ФлагПособияТравма"].Enabled = true;
        локСекц.КлеткаПоПолю["ФлагПособияОтпуск"].Enabled = true;
      elsif (ТипРеестра = ТипРеестраРожд) :
        локСекц.КлеткаПоПолю["ФлагПособияРожд"].Enabled = true;
      elsif (ТипРеестра = ТипРеестраУходРеб) :
        локСекц.КлеткаПоПолю["ФлагПособияУходРеб"].Enabled = true;
      fi;
    Template.EndModify;
end;



proc ВидФормы;
  Template.BeginModify;
    ЗаполнитьШаблоныСекций;
    СекцииНаЭкран;
  Template.EndModify;
end;

proc ЗаполнитьШаблоныСекций;
  ЗаполнитьШапку;
end;


proc ЗаполнитьШапку;
  var локТаблица : storage;
    локТаблица  = СоздатьТалицуПоИмениСекции('секцШапка');
    ИзменитьСтрокиТаблицы(локТаблица,['стр_Шапка_Фсс_Н','стр_Шапка_Фсс_К']);
    ИзменитьСтолбцыТаблицы(локТаблица,['стб_Шапка_Н','стб_Шапка_К']);
    ТекстВСекциюПоКлеткам(НаимТОФСС,локТаблица);
    ИзменитьСтрокиТаблицы(локТаблица,['стр_Шапка_Фам','стр_Шапка_Фам']);
    ТекстВСекциюПоКлеткам(Фамилия_Род,локТаблица);
    ИзменитьСтрокиТаблицы(локТаблица,['стр_Шапка_Имя','стр_Шапка_Имя']);
    ТекстВСекциюПоКлеткам(Имя_Род,локТаблица);
    ИзменитьСтрокиТаблицы(локТаблица,['стр_Шапка_Отч','стр_Шапка_Отч']);
    ТекстВСекциюПоКлеткам(Отчество_Род,локТаблица);
end;



proc СекцииНаЭкран;
  УдалитьВсеСекции(фреймЭкран);
  КлонироватьСекцию(фреймЭкран,'секцШапка',фреймШаблоны);
  КлонироватьСекцию(фреймЭкран,'секцТекстЗаявления',фреймШаблоны);
  КлонироватьСекцию(фреймЭкран,'секцСписокПособий',фреймШаблоны);
  КлонироватьСекцию(фреймЭкран,'секцСпособОплаты',фреймШаблоны);
  КлонироватьСекцию(фреймЭкран,'секцКоммент_Стр1',фреймШаблоны);
end;


--@doc Возвращает хранилищц со следующими полями:
--@doc Cекция - секция с именем локИмяСекции
--@doc Строка_С, Строка_По - границы таблицы по строкам внутри секции Cекция (пока = 0)
--@doc Столбец_С, Столбец_По - границы таблицы по столбцам внутри секции Cекция (пока = 0)
func СоздатьТалицуПоИмениСекции(локИмяСекции : string) : storage;
  var локСекц : TemplateSection;
    Result = Storage.Create;
    локСекц = СекцияПоИмени(локИмяСекции,фреймШаблоны);
    Result.Секция = локСекц;
    Result.Строка_С = 0;
    Result.Строка_По = 0;
    Result.Столбец_С = 0;
    Result.Столбец_По = 0;
end;

--@doc Записываются  в локТаблица Строка_С, Строка_По
proc ИзменитьСтрокиТаблицы(var локТаблица : storage; локИменаСтрок[] : string);
  var nstr[] : integer;
    if (локТаблица.Секция = nil) :
      return;
    fi;
    локТаблица.Строка_С = 0;
    локТаблица.Строка_По = 0;
    nstr = НомераСтрокПоИменам(локТаблица.Секция,локИменаСтрок);
    if (0 in nstr) :
      return;
    fi;
    локТаблица.Строка_С = nstr[1];
    локТаблица.Строка_По = nstr[2];
end;

--@doc Записываются в локТаблица Столбец_С, Столбец_По
proc ИзменитьСтолбцыТаблицы(var локТаблица : storage; локИменаСтолбцов[] : string);
  var nstb[] : integer;
    if (локТаблица.Секция = nil) :
      return;
    fi;
    локТаблица.Столбец_С = 0;
    локТаблица.Столбец_По = 0;
    nstb = НомераСтолбцовПоИменам(локТаблица.Секция,локИменаСтолбцов);
    if (0 in nstb) :
      return;
    fi;
    локТаблица.Столбец_С = nstb[1];
    локТаблица.Столбец_По = nstb[2];
end;

--@doc Текст записывается в секцию по 1 символу в клетк
--@doc Секция и границы определены в локТаблица
proc ТекстВСекциюПоКлеткам(локТекст : string; локТаблица : storage);
  var локСекц : TemplateSection;
  var i, j, nn : integer;
  var ss,ss1: string;
    if (локТаблица.Секция = nil) :
      return;
    fi;
    if (локТаблица.Строка_С = 0 or локТаблица.Строка_По = 0) :
      return;
    fi;
    if (локТаблица.Столбец_С = 0 or локТаблица.Столбец_По = 0) :
      return;
    fi;
    локСекц = локТаблица.Секция;
    nn = 0;
    ss = Up(локТекст);
    for i = локТаблица.Строка_С..локТаблица.Строка_По do
      for j = локТаблица.Столбец_С..локТаблица.Столбец_По do
        nn = nn + 1;
        if (Length(ss) < nn) :
          ss1 = '';
        else
          ss1 = Substr(ss,nn,1);
        fi;
        локСекц.Cell[j,i].Contents = ss1;
      end;
    end;

end;



--}

func Поле_ПриВыводе_ЗаголовокОкнаФормы (Cell: TemplateCell; Value: Variant; Action: Template.OutputTypes; var Format: String): String;
  var aTxt: string[];
  with СИС2.СтроковыеФункции  do
    aTxt[1] = MarkInGray(НашеУчреждение.Наим);
    aTxt[2] = 'Заявление на оплату пособия соц. страх. N '+НомерБум;
    if (Дата <> nil) :
      aTxt[2] = aTxt[2] + ' от '+Str(Дата);
    fi;
    if (Сотрудник <> nil) :
      aTxt[3] = MarkInGray(Сотрудник.Имя);
    else
      aTxt[3] = '<s-><s->' ;
    fi;
    Return МассивСтрокВТекст(aTxt);
  end;
end;





end