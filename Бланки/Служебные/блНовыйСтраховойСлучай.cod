class inherited —»—2.ЅазовыйЅланк "Ќовый страховой случай";

import classes  онстанты,‘ункцииѕрименени€ остант,‘ункцииЁлементовƒанных;


inobject private


  var –еквизиты—трах—луча€ : Ёлементыƒанных.–еквизиты—трах—луча€;

  var Ќаше”чреждение : Ѕазовый.ƒанные.—убъект;
  var —убъект : Ѕазовый.ƒанные.—убъект;
  var “ипѕособи€ : integer;
  var ¬ид—ќ : Ѕюджет_«ѕиƒƒ.—правочники.¬иды—траховогоќбеспечени€;

inclass public

func CreateExt (лок–еквизиты : Ёлементыƒанных.–еквизиты—трах—луча€): —лужебные.блЌовый—траховой—лучай;
  Result = —лужебные.блЌовый—траховой—лучай.Create;
  Result.–еквизиты—трах—луча€ = лок–еквизиты;
end;

func OpenForm (лок–еквизиты : Ёлементыƒанных.–еквизиты—трах—луча€): integer;
  var locForm: —лужебные.блЌовый—траховой—лучай;
  locForm = CreateExt (лок–еквизиты);
  if (CmOk = locForm.ShowEx( , Kernel.Window.ModalWindow)):
    Return CmOk;
  fi;
end;


--------------------------------------------------------------------------------
inobject private


var секц–еквизиты : TemplateSection;


--{{ ќбработчики событий шаблона

proc шаблон_ѕри—оздании(Context :Variant);
  var лок“ипыѕособий[2] : variant;
  inherited шаблон_ѕри—оздании(Context);
  лок“ипыѕособий = “ипыѕособийƒл€Ќазначени€ ;
  ќбновить—писокѕол€(Template.CellByField['“ипѕособи€'], лок“ипыѕособий);
end;

proc шаблон_ѕриќткрытии(Create :Logical);
  inherited шаблон_ѕриќткрытии(Create);
  ѕрочитатьѕол€;
  ¬ид‘ормы;
end;

--}}


--{{ ќбработчики событий клеток шаблона

func ѕоле_ѕри¬ыводе (Cell: TemplateCell; Value: Variant; Action: Template.OutputTypes; var Format: String): string;
  Result = '';
  if (Cell.Contents = 'Ќаше”чреждение') :
    return if(Ќаше”чреждение <> nil : Ќаше”чреждение.Ќаим, '');
  elsif (Cell.Contents = '—убъект') :
    return if(—убъект <> nil : —убъект.Ќаим, '');
  fi;
end;

func ѕоле_ѕри¬ходе (Cell: TemplateCell; Index: Integer; Action: Template.EnterTypes): Logical;
  var локЌаше”чреждение, лок—убъект[] : Ѕазовый.ƒанные.—убъект;
    Result = false;
    if (Cell.Contents = 'Ќаше”чреждение') :
      if (CmOk = “ЅЅ_Ѕазовый.Ѕиблио.¬ыборЌашего”чреждени€(локЌаше”чреждение)):
        Ќаше”чреждение = локЌаше”чреждение;
        ¬ид‘ормы;
      fi;
    elsif (Cell.Contents = '—убъект') :
      if (CmOk = “ЅЅ_Ѕазовый.—правочники.—убъект.карт—отрудник.¬ыполнить¬ыбор(лок—убъект,Ќаше”чреждение)):
        —убъект = лок—убъект[1];
        ¬ид‘ормы;
      fi;
    elsif (Cell.Contents = '¬ид—ќ') :
      if (CmOk = “ЅЅ_Ѕазовый.—правочники.—убъект.карт—отрудник.¬ыполнить¬ыбор(лок—убъект,Ќаше”чреждение)):
        —убъект = лок—убъект[1];
        ¬ид‘ормы;
      fi;
    fi;
end;

proc ѕоле“ипѕособи€_ѕри¬ыходе(Cell: TemplateCell; Index: Integer);
  кнќк.Enabled = ¬се¬ведено;
end;

--}}

--{{ ќбработчики событий прочих объектов шаблона

proc кнќк_ѕриЌажатии (Sender: Button);
  —оздать«аписи;
  inherited кнќк_ѕриЌажатии (Sender);
end;

--}}



--{{ ¬спомогательные методы

proc ѕрочитатьѕол€;
 Ќаше”чреждение = –еквизиты—трах—луча€.Ќаше”чреждение;
 —убъект = –еквизиты—трах—луча€.—убъект;
 “ипѕособи€ = –еквизиты—трах—луча€.“ипѕособи€;
 ¬ид—ќ = –еквизиты—трах—луча€.¬ид—ќ;
end;

proc «аписатьѕол€;
 –еквизиты—трах—луча€.«апомнитьЌаше”чреждение(Ќаше”чреждение);
 –еквизиты—трах—луча€.«апомнить—убъект(—убъект);
 –еквизиты—трах—луча€.«апомнить“ипѕособи€(“ипѕособи€);
 –еквизиты—трах—луча€.«апомнить¬ид—ќ(¬ид—ќ);
end;


proc ¬ид‘ормы;
  var i : integer;
  var лок¬водЌаше : logical;
    лок¬водЌаше = if (–еквизиты—трах—луча€.Ќаше”чреждение <> nil : false, true);
    лок¬водЌаше = if (лок¬водЌаше and —убъект <> nil: false, лок¬водЌаше);
    Template.BeginModify;
      for i = 1..секц–еквизиты.RowsCount do
        if (секц–еквизиты.Row[i].Name = 'стр_–екв_¬ывод') :
          секц–еквизиты.Row[i].Visible = not лок¬водЌаше;
        elsif (секц–еквизиты.Row[i].Name = 'стр_–екв_¬вод') :
          секц–еквизиты.Row[i].Visible = лок¬водЌаше;
        fi;
      end;
      кнќк.Enabled = ¬се¬ведено;
    Template.EndModify;
end;

func ¬се¬ведено : logical;
  Result = true;
  if (Ќаше”чреждение = nil) :
    return false;
  fi;
  if (—убъект = nil) :
    return false;
  fi;
  if (“ипѕособи€ = “ипѕособи€Ќет) :
    return false;
  fi;
  --дату вводить не об€зательно
end;

proc —оздать«аписи;
    «аписатьѕол€;
    —оздать—траховой—лучай;
    —оздатьѕолучател€ѕособи€;
end;

proc —оздать—траховой—лучай;
  var лок»нт : ƒанные.инт—траховой—лучай;
  var локѕараметры[2] : variant;
  var лок—трах—лучай : ƒанные.—траховой—лучай;
    локѕараметры = –еквизиты—трах—луча€.ѕараметрыЌового—трах—луча€;
    лок»нт = ƒанные.инт—траховой—лучай.—оздать—ƒопѕараметрами (локѕараметры);
    лок»нт.»нициализироватьѕо”молчанию;
    лок—трах—лучай = лок»нт.Record;
    лок—трах—лучай.Post;
    –еквизиты—трах—луча€.«апомнить«апись—трах—луча€(лок—трах—лучай);
end;

func —оздатьѕолучател€ѕособи€ : ƒанные.ѕолучательѕособи€;
var локѕолучательѕособи€ : Ёлементыƒанных.ѕолучательѕособи€;
var лок»нт : ƒанные.интѕолучательѕособи€;
var локѕараметры[2] : variant;
var локѕолучатель : ƒанные.ѕолучательѕособи€;
    локѕолучательѕособи€ = Ёлементыƒанных.ѕолучательѕособи€.—оздатьѕо«аписи—убъекта(—убъект);
    локѕолучательѕособи€.«апомнить—траховой—лучай(–еквизиты—трах—луча€.«апись—трах—луча€);
    локѕараметры  = локѕолучательѕособи€.ѕараметрыЌовой«аписи;
    лок»нт = ƒанные.интѕолучательѕособи€.—оздать—ƒопѕараметрами (локѕараметры);
    лок»нт.»нициализироватьѕо”молчанию;
    локѕолучатель = лок»нт.Record;
    локѕолучатель.Post;
    јдрес–егистрацииѕо”мол (локѕолучатель);
    ”дЋичностиѕо”мол (локѕолучатель);
end;


--}}



end