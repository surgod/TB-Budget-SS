class inherited —»—2.ЅазовыйЅланк "¬вод настроек ¬ида страхового обеспечени€";

import classes  онстанты,‘ункцииѕрименени€ остант,‘ункцииЁлементовƒанных;


inobject public


  var »нт¬ида—ќ : Ѕюджет_«ѕиƒƒ.—правочники.инт¬ид—траховогоќбеспечени€;
  var –ежима¬ызова : integer;

inclass public

  type “ип–ежима¬ызова = (“ип–ежима—тандарт = 0, “ип–ежимаѕользователь);


func —оздатьѕо»нтерфейсу¬ида—ќ (лок»нт : Ѕюджет_«ѕиƒƒ.—правочники.инт¬ид—траховогоќбеспечени€;
                                лок–ежим : integer) : —лужебные.бл¬водЌастроек¬ида—ќ;
  Result = —лужебные.бл¬водЌастроек¬ида—ќ.Create;
  Result.»нт¬ида—ќ = лок»нт;
  Result.–ежима¬ызова = лок–ежим;
  Result.ѕрочитатьѕол€;
end;

func ќткрытьѕо»нтерфейсу¬ида—ќ (лок»нт : Ѕюджет_«ѕиƒƒ.—правочники.инт¬ид—траховогоќбеспечени€;
                                лок–ежим : integer): integer;
  var locForm: —лужебные.бл¬водЌастроек¬ида—ќ;
  locForm = —оздатьѕо»нтерфейсу¬ида—ќ (лок»нт,лок–ежим);
  if (CmOk = locForm.ShowEx( , Kernel.Window.ModalWindow)):
    Return CmOk;
  fi;
end;

inobject private

var фрейм¬вод : TemplateFrame;

var секц—тандарт : TemplateSection;
var секцѕользователь : TemplateSection;

var “ипѕособи€ :  integer;
var “ип”части€‘—— : integer;
var ¬ид–асчетов—_‘——  : integer;



--------------------------------------------------------------------------------
--{ ќбработчики событий бланка

proc шаблон_ѕри—оздании(Context :Variant);
  inherited шаблон_ѕри—оздании(Context);
  ќбновить—писокѕол€(секц—тандарт.CellByField['“ипѕособи€'], “ипыѕособий, 1, 2);
  ќбновить—писокѕол€(секц—тандарт.CellByField['“ип”части€‘——'], “ипы”части€‘——, 1, 2);
  ќбновить—писокѕол€(секц—тандарт.CellByField['¬ид–асчетов—_‘——'], ¬иды–асчетов—_‘——, 1, 2);
  ќбновить—писокѕол€(секцѕользователь.CellByField['“ипѕособи€'], “ипыѕособий, 1, 2);
  ќбновить—писокѕол€(секцѕользователь.CellByField['“ип”части€‘——'], “ипы”части€‘——, 1, 2);
  ќбновить—писокѕол€(секцѕользователь.CellByField['¬ид–асчетов—_‘——'], ¬иды–асчетов—_‘——, 1, 2);

end;

proc шаблон_ѕриќткрытии(Create :Logical);
  inherited шаблон_ѕриќткрытии(Create);
  ¬ид‘ормы;
end;

--}

--{{ ќбработчики событий прочих объектов шаблона

proc кнќк_ѕриЌажатии (Sender: Button);
  if (–ежима¬ызова = “ип–ежима—тандарт) :
    «аписать—тандарт;
  elsif (–ежима¬ызова = “ип–ежимаѕользователь) :
    «аписатьѕользователь;
  fi;
  inherited кнќк_ѕриЌажатии (Sender);
end;

--}}



--{{ ¬спомогательные методы

proc ¬ид‘ормы;
  Template.BeginModify;
    if (–ежима¬ызова = “ип–ежима—тандарт) :
      секц—тандарт.Visible = true;
      секцѕользователь.Visible = false;
    elsif (–ежима¬ызова = “ип–ежимаѕользователь) :
      секц—тандарт.Visible = false;
      секцѕользователь.Visible = true;
    fi;
  Template.EndModify;
end;

proc «аписать—тандарт;
  var локѕараметры[2]  : variant;
    локѕараметры = nil;
    локѕараметры[1] = ['“ипѕособи€',“ипѕособи€];
    локѕараметры[2] = ['“ип”части€‘——',“ип”части€‘——];
    локѕараметры[3] = ['¬ид–асчетов—_‘——',¬ид–асчетов—_‘——];
    »нт¬ида—ќ.—охранитьЌастройки(локѕараметры);
end;

proc «аписатьѕользователь;
  var лок–асчет—_‘—— : Ќастройки.—правочники.–асчеты—_‘——;
    лок–асчет—_‘—— = ѕолучить«аписьЌастройки;
    if (лок–асчет—_‘—— = nil) :
      лок–асчет—_‘—— = Ќастройки.—правочники.–асчеты—_‘——.Create;
      лок–асчет—_‘——.¬ид—траховогоќбеспечени€ = »нт¬ида—ќ.Record;
      лок–асчет—_‘——.¬ид–асчетов—_‘—— = ¬ид–асчетов—_‘——;
      лок–асчет—_‘——.Post;
    else
      лок–асчет—_‘——.¬ид–асчетов—_‘—— = ¬ид–асчетов—_‘——;
    fi;
end;

func ѕолучить«аписьЌастройки : Ќастройки.—правочники.–асчеты—_‘—— ;
  var лок‘ильтр : string;
  var лок¬ид—ќ : Ѕюджет_«ѕиƒƒ.—правочники.¬иды—траховогоќбеспечени€;
    лок¬ид—ќ = »нт¬ида—ќ.Record;
    лок‘ильтр = "¬ид—траховогоќбеспечени€=" + Str(лок¬ид—ќ);
    Result = —»—2.‘ункцииƒокумента.QueryLastRecord(Ќастройки.—правочники.–асчеты—_‘——,лок‘ильтр);
end;

proc ѕрочитаьѕол€—тандарт;
  var лок¬ид—ќ : Ѕюджет_«ѕиƒƒ.—правочники.¬иды—траховогоќбеспечени€;
    лок¬ид—ќ = »нт¬ида—ќ.Record;
    “ипѕособи€ = лок¬ид—ќ.“ипѕособи€;
    “ип”части€‘—— = лок¬ид—ќ.“ип”части€‘——;
    ¬ид–асчетов—_‘—— = лок¬ид—ќ.¬ид–асчетов—_‘——;
end;

proc ѕрочитаьѕол€ѕользователь;
  var лок–асчет—_‘—— : Ќастройки.—правочники.–асчеты—_‘——;
    лок–асчет—_‘—— = ѕолучить«аписьЌастройки;
    if (лок–асчет—_‘—— <> nil) :
      ¬ид–асчетов—_‘—— = лок–асчет—_‘——.¬ид–асчетов—_‘——;
    fi;
end;



--}}


inobject public

--{{ ¬спомогательные методы

proc ѕрочитатьѕол€;
  if (–ежима¬ызова = “ип–ежима—тандарт) :
    ѕрочитаьѕол€—тандарт;
  elsif (–ежима¬ызова = “ип–ежимаѕользователь) :
    ѕрочитаьѕол€—тандарт;
    ѕрочитаьѕол€ѕользователь;
  fi;
end;

--}}


end