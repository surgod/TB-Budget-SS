class inherited СИС2.БазовыйБланк "Мастер заявок на назначение пособия";

import classes Константы,ФункцииПримененияКостант;


inobject private


  var НашеУчреждение : Базовый.Данные.Субъект;
  var Сотрудник : Базовый.Данные.Субъект;
  var НазначениеПособия : Бюджет_ЗПиДД.РасчетныеОперации.НазначениеПособия;
  var НазначениеПособияДоп : Бюджет_ЗПиДД.РасчетныеОперации.НазначениеПособия;
  var ТипИнфо : integer;
  var ПричинаПерерасчета : integer;

  var НоваяЗаявка : Данные.ЗаявкаНаНазначениеПособия;
  var ПараметрыНовойЗаписи[2] : variant;


inclass public

func CreateExt (локНашеУчреждение : Базовый.Данные.Субъект): Служебные.блНоваяЗаявкаНаНазначениеПособия;
  Result = Служебные.блНоваяЗаявкаНаНазначениеПособия.Create;
  Result.НашеУчреждение = локНашеУчреждение;
end;

func OpenForm (локНашеУчреждение : Базовый.Данные.Субъект; var локПараметрыНовойЗаписи[2] : variant): integer;
  var locForm: Служебные.блНоваяЗаявкаНаНазначениеПособия;
  locForm = CreateExt (локНашеУчреждение);
  if (CmOk = locForm.ShowEx( , Kernel.Window.ModalWindow)):
    локПараметрыНовойЗаписи  = locForm.ПараметрыНовойЗаписи;
    Return CmOk;
  fi;
end;



--------------------------------------------------------------------------------
inobject private

--секции
var секцСотрудник : TemplateSection;
var секцНазначение : TemplateSection;
var секцНазначениеДоп : TemplateSection;
var секцТипИнфо : TemplateSection;

--фреймы

var фреймВвод :TemplateFrame;

--кнопки

var кнНазад : Button;
var кнДалее : Button;


var НомерШага : integer;

--{{ Обработчики событий шаблона

proc шаблон_ПриСоздании(Context :Variant);
  inherited шаблон_ПриСоздании(Context);
  ОбновитьСписокПоля(Template.CellByField['ТипИнфо'], ТипыИнфо);
  ОбновитьСписокПоля(Template.CellByField['ПричинаПерерасчета'], ТипыПричиныПерерасчета);
end;

proc шаблон_ПриОткрытии(Create :Logical);
  inherited шаблон_ПриОткрытии(Create);
  НомерШага = 1;
  ВидФормы;
end;

--}}

--{{ Обработчики событий клеток шаблона

func Поле_ПриВыводе (Cell: TemplateCell; Value: Variant; Action: Template.OutputTypes; var Format: String): string;
  var локВидСО : Бюджет_ЗПиДД.Справочники.ВидыСтраховогоОбеспечения;
  Result = '';
  if (Cell.Contents = 'НашеУчреждение') :
    return if(НашеУчреждение <> nil : НашеУчреждение.Наим, '');
  elsif (Cell.Contents = 'Сотрудник') :
    return if(Сотрудник <> nil : Сотрудник.Наим, '');
  elsif (Cell.Contents = 'НазначениеПособия') :
    if (НазначениеПособия <> nil) :
      локВидСО = НазначениеПособия.ВидСтраховогоОбеспечения;
      return if(локВидСО <> nil : локВидСО.Наим, '');
    fi;
  elsif (Cell.Contents = 'Период') :
    if (НазначениеПособия <> nil) :
      if (НазначениеПособия.ДатаНачала <> nil and НазначениеПособия.ДатаОкончания <> nil) :
        return 'с ' + Str(НазначениеПособия.ДатаНачала) + ' по ' + Str(НазначениеПособия.ДатаОкончания);
      fi;
    fi;
  elsif (Cell.Contents = 'ДатаСтраховогоСлучая') :
    if (НазначениеПособия <> nil) :
      if (НазначениеПособия.ДатаСтраховогоСлучая <> nil) :
        return  Str(НазначениеПособия.ДатаСтраховогоСлучая);
      fi;
    fi;
  elsif (Cell.Contents = 'НазначениеПособияДоп') :
    if (НазначениеПособияДоп <> nil) :
      локВидСО = НазначениеПособияДоп.ВидСтраховогоОбеспечения;
      return if(локВидСО <> nil : локВидСО.Наим, '');
    fi;
  fi;
end;

func Поле_ПриВходе (Cell: TemplateCell; Index: Integer; Action: Template.EnterTypes): Logical;
  var локСубъект[] : Базовый.Данные.Субъект;
  var локНазначениеПособия :  Бюджет_ЗПиДД.РасчетныеОперации.НазначениеПособия;
  var локТипыПособий[] : integer;
    Result = false;
    if (Cell.Contents = 'Сотрудник') :
      if (CmOk = ТББ_Базовый.Справочники.Субъект.картСотрудник.ВыполнитьВыбор(локСубъект,НашеУчреждение)):
        if (Сотрудник <> локСубъект[1]) :
          НазначениеПособия = nil;
         НазначениеПособияДоп = nil;
        fi;
        Сотрудник = локСубъект[1];
        ВидФормы;
      fi;
    elsif (Cell.Contents = 'НазначениеПособия') :
      локНазначениеПособия = НазначениеПособия;
      локТипыПособий = ТипыПособийДляПрямыхВыплат;
      if (CmOk = РасчетныеОперации.картНазначениеПособияСС.ВыполнитьВыбор(локНазначениеПособия,НашеУчреждение,Сотрудник,локТипыПособий)):
        if (НазначениеПособия <> локНазначениеПособия) :
          НазначениеПособияДоп = nil;
        fi;
        НазначениеПособия = локНазначениеПособия;
        ВидФормы;
      fi;
    elsif (Cell.Contents = 'НазначениеПособияДоп') :
      локНазначениеПособия = НазначениеПособияДоп;
      локТипыПособий = [ТипПособияРанСрок];
      if (CmOk = РасчетныеОперации.картНазначениеПособияСС.ВыполнитьВыбор(локНазначениеПособия,НашеУчреждение,Сотрудник,локТипыПособий)):
        НазначениеПособияДоп = локНазначениеПособия;
        ВидФормы;
      fi;
    fi;
end;

--}}

--{{ Обработчики событий прочих объектов шаблона

proc кнНазад_ПриНажатии (Sender: Button);
  if (НомерШага > 1) :
    НомерШага = НомерШага - 1;
    ВидФормы;
  fi;
end;

proc кнДалее_ПриНажатии (Sender: Button);
  var локПараметры[2] : variant;
  if (кнДалее.Caption = 'Далее') :
    НомерШага = НомерШага + 1;
    ВидФормы;
  elsif (кнДалее.Caption = 'Ок') :
    локПараметры = Данные.интЗаявкаНаНазначениеПособия.ПараметрыНовойЗаявки(НазначениеПособия,НазначениеПособияДоп);
    InsertInArray(локПараметры, LengthOfArray(локПараметры) + 1, ['ТипИнфо', ТипИнфо]);
    InsertInArray(локПараметры, LengthOfArray(локПараметры) + 1, ['ПричинаПерерасчета', ПричинаПерерасчета]);
    ПараметрыНовойЗаписи = локПараметры;
    Close(CmOk);
  else
    Close(CmCancel);
  fi;
end;


--}}


--{{ Вспомогательные методы



proc ВидФормы;
  var ii : integer;
  Template.BeginModify;
    секцСотрудник.Visible = false;
    секцНазначение.Visible = false;
    секцНазначениеДоп.Visible = false;
    секцТипИнфо.Visible = false;
    if (НомерШага = 1) :
      секцСотрудник.Visible = true;
      --СекцияСотрудникНаЭкран;
    elsif (НомерШага = 2) :
      секцНазначение.Visible = true;
      Template.CurrentCell = секцНазначение.CellByField['НазначениеПособия'];
      if (НазначениеПособия = nil) :
        секцНазначение.Row[2].Visible = false;
        секцНазначение.Row[3].Visible = false;
        секцНазначение.Row[4].Visible = true;
      else
        if (НазначениеПособия.ДатаНачала <> nil and НазначениеПособия.ДатаОкончания <> nil) :
          секцНазначение.Row[2].Visible = true;
          секцНазначение.Row[3].Visible = false;
          секцНазначение.Row[4].Visible = false;
        else
          секцНазначение.Row[2].Visible = false;
          секцНазначение.Row[3].Visible = true;
          секцНазначение.Row[4].Visible = false;
        fi;
      fi;
      --СекцияНазначениеНаЭкран;
    elsif (НомерШага = 3) :
      секцТипИнфо.Visible = true;
      --локВидСО = НазначениеПособия.ВидСтраховогоОбеспечения;
      ii = ТипПособияПоКодуСО (НазначениеПособия.ВидСтраховогоОбеспечения.Код);
      if (ii = ТипПособияБерем) :
        секцНазначениеДоп.Visible = true;
      fi;
    fi;
    КнопкиНаЭкран;
  Template.EndModify;
end;

proc КнопкиНаЭкран;
  if (НомерШага = 1) :
    кнНазад.Enabled = false;
    кнДалее.Enabled = false;
    кнДалее.Caption = 'Далее';
    if (Сотрудник <> nil) :
      кнДалее.Enabled = true;
    fi;
  elsif (НомерШага = 2) :
    кнНазад.Enabled = true;
    кнДалее.Enabled = false;
    кнДалее.Caption = 'Далее';
    if (НазначениеПособия <> nil) :
      кнДалее.Enabled = true;
    fi;
  elsif (НомерШага = 3) :
    кнНазад.Enabled = true;
    кнДалее.Enabled = true;
    кнДалее.Caption = 'Ок';
  fi;
end;

--func СоздатьНовуюЗаявку : Данные.ЗаявкаНаНазначениеПособия;
--  var локИнт : Данные.интЗаявкаНаНазначениеПособия;
--  var локПараметры[2] : variant;
--    Result = nil;
 --   локПараметры = [['ТипИнфо', ТипИнфо] , ['ПричинаПерерасчета',ПричинаПерерасчета]];
 --   локИнт = Данные.интЗаявкаНаНазначениеПособия.Создать;
 --   локИнт.УстановитьПараметрыНовойЗаписи (локПараметры);
 --   локИнт.НоваяЗаявка(НазначениеПособия);
 --   return локИнт.Record;
--end;

--}}



func Поле_ПриВыводе_ЗаголовокОкнаФормы (Cell: TemplateCell; Value: Variant; Action: Template.OutputTypes; var Format: String): String;
  var aTxt: string[];
  with СИС2.СтроковыеФункции  do
    aTxt[1] = MarkInGray('Мастер новой заявки');
    aTxt[2] = '';
    if (НомерШага = 1) :
      aTxt[2] = 'Шаг 1: выбор сотрудника';
    elsif (НомерШага = 2) :
      aTxt[2] = 'Шаг 2: выбор назначения пособия';
    elsif (НомерШага = 3) :
      aTxt[2] = 'Шаг 3: ввод типа информации и причины перерасчета';
    fi;
    Return МассивСтрокВТекст(aTxt);
  end;
end;


end