class inherited јдрес .—правочники.редјдрес "јдрес получател€ пособи€", editor Ѕазовый.—правочники.јдрес;

inobject private

-- ќбработчики событий шаблона --

  proc шаблон_ѕриќткрытии (Create: Logical);
    var locCell: TemplateCell;
    Template.BeginModify;
      ----
      --locCell = секц—убъект.CellByField['—убъект. од'];
      --if (locCell <> nil): -- в случе повторного вызова  метода
      --  locCell.Enabled = false;
      --  locCell.Contents = ѕолучатель‘изЋицо. од;
      --  locCell.OnDraw = 'ѕри–исовании_ акѕоле¬ывода';
      --fi;
      ----
      --locCell = секц—убъект.CellByField['—убъект.»м€'];
      --if (locCell <> nil):
      --  locCell.Enabled = false;
      --  locCell.Contents = ѕолучатель‘изЋицо.»м€;
      --  locCell.Button = false;
      --  locCell.OnDraw = 'ѕри–исовании_ акѕоле¬ывода';
      --fi;
      ----
      --locCell = SectionCellByContents(секц—убъект, '»м€ субъекта');
      --if (locCell <> nil):
      --  locCell.Contents = 'ѕолучатель пособи€';
      --fi;
      ----
      секц—убъект.ParentFrame.Visible = false;
      locCell = секѕозиции“иповјдресов.CellByField['“ипјдресаѕрименен'];
      if (locCell <> nil):
        locCell.Enabled = false;
      fi;
    Template.EndModify;
    inherited шаблон_ѕриќткрытии(Create);
  end;

-- ќбработчики событий клеток шаблона --

  func ѕоле«аголовокќкна‘ормы_ѕри¬ыводе (Cell: TemplateCell; Value: Variant; Action: Template.OutputTypes; var Format: String): String;
    if (ѕолучатель‘изЋицо <> nil):
      Return ѕолучатель‘изЋицо.»м€;
    else
      Cell.Font.Color = —»—2. онстанты.clRed;
      Return 'ѕолучатель не указан';
    fi;
  end;

-- ¬спомогательные методы --

  proc ѕоказать“ипыјдресов;
    “ипјдресаЌаим = nil;
    with Query.Create([Ѕазовый.—правочники.“ипјдреса]) do
      Order = 'Ќомер';
      Filter = 'ƒл€‘излиц';
      Select;
      while not Eof do
        —»—2.‘ункции.AddInArray(“ипјдресаЌаим, Current, true);
        Next;
      od;
      секѕозиции“иповјдресов.Count = Count;
    end;
  end;

  proc ”становить‘ильтр—убъекта;
  end;


--  proc ѕоле_ѕри–исовании (Cell: TemplateCell; Selected: Logical; var Color: Integer; var FieldColor: Integer; Font: Font);
--    inherited ѕри–исовании_ акѕоле¬ывода
--  end;

end