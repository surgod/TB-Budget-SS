class inherited —»—2. артЅазова€ "картотека назначений пособий";

import classes  онстанты,‘ункцииѕрименени€ остант;

inobject private


func  артѕоле_ѕри¬ыводе (Column: CardfileColumn; Rec: Ѕюджет_«ѕиƒƒ.–асчетныеќперации.Ќазначениеѕособи€; Action: Template.OutputTypes; var Format: String): Variant;
  --var лок¬ид—ќ : Ѕюджет_«ѕиƒƒ.—правочники.¬иды—траховогоќбеспечени€;
  var ii : integer;
    Result = '';
    --лок¬ид—ќ = Rec.¬ид—траховогоќбеспечени€;
    ii = “ипѕособи€ѕо оду—ќ (Rec.¬ид—траховогоќбеспечени€. од);
    Result = »м€“ипаѕособи€(ii);
end;



inclass public

func ¬ыполнить¬ыбор (var лок–езультат¬ыбора: Ѕюджет_«ѕиƒƒ.–асчетныеќперации.Ќазначениеѕособи€;
                     локЌаше”чреждение: Ѕазовый.ƒанные.—убъект;
                     лок—отрудник : Ѕазовый.ƒанные.—убъект;
                     лок“ипыѕособий[] : integer) : integer;
                     --локѕособиеƒоп : logical = false): Integer;
  var locCrd: –асчетныеќперации.картЌазначениеѕособи€——;
  var locResult: Ѕюджет_«ѕиƒƒ.–асчетныеќперации.Ќазначениеѕособи€;
  var лок¬иды—ќ[] : integer;
  var aFlt[] : string;
    лок¬иды—ќ  = ‘ильтр¬идов—ќѕо“»памѕособий(лок“ипыѕособий);
    aFlt[1] = 'Ќаше”чреждение=' + Str(локЌаше”чреждение);
    aFlt[2] = '—отрудник=' + Str(лок—отрудник);
    aFlt[3] = '¬ид—траховогоќбеспечени€.DocId in ' + Str(лок¬иды—ќ);
    locResult = лок–езультат¬ыбора;
    locCrd = –асчетныеќперации.картЌазначениеѕособи€——.Create;
    locCrd.CardFile.UserFilter = —»—2.—троковые‘ункции.—ложить—троки‘ильтраѕо»(aFlt);
    if (CmOk = locCrd.ShowEx(locResult, , Kernel.Window.ModalWindow)):
      лок–езультат¬ыбора = locResult;
      Return CmOk;
    fi;
end;

end