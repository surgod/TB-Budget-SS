class inherited МашинаРеквизитов.Базовые.интЗаписьКодИмя "Интерфейс записи ПолучательПособия";

inclass public

  func СвязанныйКлассЗаписей: class СИС2.Базовая.БазоваяЗапись;
    Result = Данные.ПолучательПособия;
  end;

  func Create: Данные.интПолучательПособия;
    Result = inherited Create;
    Result.Record = Данные.ПолучательПособия.Create;
  end;

  func ОткрытьПоЗаписи synonym OpenRecord (locRecord: Данные.ПолучательПособия): Данные.интПолучательПособия;
    Result = inherited Create;
    Result.Record = locRecord;
  end;

  func БланкРедакторПоУмолчанию: class BlankForm;
    Result = Данные.редПолучательПособия;
  end;

  func КартотекаПоУмолчанию: class CardForm;
    Result = Данные.картПолучательПособия;
  end;

  ------------

  func СоздатьСДопПараметрами (локДопПараметры[2] : variant): Данные.интПолучательПособия;
    Result = inherited Create;
    Result.ДопПараметры = локДопПараметры;
    Result.Record = Данные.ПолучательПособия.Create;
  end;


inobject public

  Record: Данные.ПолучательПособия;


  var ДопПараметры[2] : variant;

  --@doc При создании новой записи
proc ИнициализироватьПоУмолчанию synonym InitByDefault;
  var i : integer;
    for i = 1..LengthOfArray(ДопПараметры) do
      ДобавитьПараметрНовойЗаписи(ДопПараметры[i,1], ДопПараметры[i,2]);
    end;
  --ДобавитьПараметрНовойЗаписи('Имя', 'Новый страховой случай');
  --ДобавитьПараметрНовойЗаписи('Наим', 'Новый страховой случай');
  inherited InitByDefault;
  Self.Record.Код = ТББ_Базовый.Нумератор.НовыйКод(Self.Record);
end;


end