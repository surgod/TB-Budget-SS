class inherited ћашина–еквизитов.Ѕазовые.инт«апись "»нтерфейс записи  ƒанныеƒл€¬ремЌетруд»Ѕерем";

import classes  онстанты,‘ункцииѕрименени€ остант;--,‘ункцииƒанных;

inclass public

  func —в€занный ласс«аписей: class —»—2.Ѕазова€.Ѕазова€«апись;
    Result = ƒанные.ƒанныеƒл€¬ремЌетруд»Ѕеременность;
  end;

  func Create: ƒанные.интƒанныеƒл€¬ремЌетруд»Ѕерем;
    Result = inherited Create;
    Result.Record = ƒанные.ƒанныеƒл€¬ремЌетруд»Ѕеременность.Create;
  end;

  func ќткрытьѕо«аписи synonym OpenRecord (locRecord: ƒанные.ƒанныеƒл€¬ремЌетруд»Ѕеременность): ƒанные.интƒанныеƒл€¬ремЌетруд»Ѕерем;
    Result = inherited Create;
    Result.Record = locRecord;
  end;

  func Ѕланк–едакторѕо”молчанию: class BlankForm;
    Result = nil;
  end;

  func  артотекаѕо”молчанию: class CardForm;
    Result = nil;
  end;

--дл€ соц.страх.

func Ќайти«аписьѕо«а€вке(лок«а€вка : ƒанные.«а€вкаЌаЌазначениеѕособи€) :  ƒанные.ƒанныеƒл€¬ремЌетруд»Ѕеременность;
var лок‘ильтр : string;
  лок‘ильтр = '«а€вкаЌаЌазначениеѕособи€ = ' + Str(лок«а€вка);
  Result = —»—2.‘ункцииƒокумента.QueryRecord(ƒанные.ƒанныеƒл€¬ремЌетруд»Ѕеременность, лок‘ильтр);
end;

inobject public

  Record: ƒанные.ƒанныеƒл€¬ремЌетруд»Ѕеременность;

proc »нициализироватьѕо”молчанию synonym InitByDefault;
  inherited InitByDefault;
end;

proc Ќова€«аписьѕо«а€вке(лок«а€вка : ƒанные.«а€вкаЌаЌазначениеѕособи€);
  »нициализироватьѕо”молчанию;
  Self.Record.«а€вкаЌаЌазначениеѕособи€ = лок«а€вка;
end;

proc  опировать»зЅольничногоЋиста(локЅольничныйЋист : Ѕюджет_ѕерсонал.ƒокументы. адры.ЅольничныйЋист);
  if (Self.Record.State <> Record.Created) then
    Self.Record.Edit;
  end;
  if (локЅольничныйЋист = nil) :
    return;
  fi;
  Self.Record.“ип‘ормыЅЋ = if(локЅольничныйЋист.ЁтоЁЋЌ : “ип‘ормыЅЋЁл,“ип‘ормыЅЋЅум);
  if (локЅольничныйЋист.ѕродолжение <> nil) :
    Self.Record.ѕродолжениеЅЋ = локЅольничныйЋист.ѕродолжение.Ќомерƒок;
  fi;
  Self.Record.ƒатаЅЋ = локЅольничныйЋист.ƒатаƒок;
  Self.Record.ЌомерЅЋ = локЅольничныйЋист.Ќомерƒок;

  Self.Record. одѕричины = локЅольничныйЋист. одѕричины;
  Self.Record. одѕричиныƒоп = локЅольничныйЋист. одѕричиныƒоп;
  Self.Record. одѕричины»зм = локЅольничныйЋист. одѕричины»зм;

  --Self.Record.ƒата1 = локЅольничныйЋист.ƒата1;
  --Self.Record.ƒата2 = локЅольничныйЋист.ƒата2;
  --Self.Record.Ќомерѕутевки = локЅольничныйЋист.Ќомерѕутевки;

  Self.Record.¬озрастЋет1 = локЅольничныйЋист.¬озрастЋет1;
  Self.Record.¬озрастћес1 = локЅольничныйЋист.¬озрастћес1;
  Self.Record. од–одства1 = локЅольничныйЋист. од–одства1;
  Self.Record.‘ио„—1 = локЅольничныйЋист.‘ио„—1;

  Self.Record.¬озрастЋет2 = локЅольничныйЋист.¬озрастЋет2;
  Self.Record.¬озрастћес2 = локЅольничныйЋист.¬озрастћес2;
  Self.Record. од–одства2 = локЅольничныйЋист. од–одства2;
  Self.Record.‘ио„—2 = локЅольничныйЋист.‘ио„—2;


  --Self.Record.Ќа”чете–—Ѕ = локЅольничныйЋист.Ќа”чете–—Ѕ;

  Self.Record. одЌарушени€–ежима = локЅольничныйЋист. одЌарушени€–ежима;
  Self.Record.ƒатаЌарушени€–ежима = локЅольничныйЋист.ƒатаЌарушени€–ежима;

  Self.Record.ƒата—тационар1 = локЅольничныйЋист.ƒатаЌарушени€–ежима;
  Self.Record.ƒата—тационар2 = локЅольничныйЋист.ƒата—тационар2;

  Self.Record.√руппа»нв = локЅольничныйЋист.√руппа»нв;

  Self.Record.ƒатаЌачала = локЅольничныйЋист.ƒатаЌачала;
  Self.Record.ƒатаќкончани€ = локЅольничныйЋист.ƒатаќкончани€;
  Self.Record.ƒней¬сегоЅолезни = локЅольничныйЋист.ƒней¬сегоЅолезни;

  --Self.Record. од»ногоќкончани€ = локЅольничныйЋист. од»ногоќкончани€;
  --Self.Record.ƒата»ногоќкончани€ = локЅольничныйЋист.ƒата»ногоќкончани€;

  Self.Record. од”словий»счислени€1 = локЅольничныйЋист. од”словий»счислени€1;
  Self.Record. од”словий»счислени€2 = локЅольничныйЋист. од”словий»счислени€2;
  Self.Record. од”словий»счислени€3 = локЅольничныйЋист. од”словий»счислени€3;

  Self.Record.ƒатајктЌ1 = локЅольничныйЋист.ƒатајктЌ1;

  Self.Record.Post;
end;

proc «аписать—правкуќ–анних—роках(локЌазначение : Ѕюджет_«ѕиƒƒ.–асчетныеќперации.Ќазначениеѕособи€);
  Self.Record.Ќомер—правки = локЌазначение.Ќомерƒок;
  Self.Record.ƒата—правки = локЌазначение.ƒатаƒок;
end;




end