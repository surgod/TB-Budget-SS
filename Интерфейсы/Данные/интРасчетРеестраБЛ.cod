class inherited ћашина–еквизитов.Ѕазовые.инт«апись "»нтерфейс записи –асчет¬ремЌетруд»Ѕеременность";

import classes  онстанты,‘ункцииѕрименени€ остант;--,‘ункцииƒанных;

inclass public

  func —в€занный ласс«аписей: class —»—2.Ѕазова€.Ѕазова€«апись;
    Result = ƒанные.–асчет–еестраЅЋ;
  end;

  func Create: ƒанные.инт–асчет–еестраЅЋ;
    Result = inherited Create;
    Result.Record = ƒанные.–асчет–еестраЅЋ.Create;
  end;

  func ќткрытьѕо«аписи synonym OpenRecord (locRecord: ƒанные.–асчет–еестраЅЋ): ƒанные.инт–асчет–еестраЅЋ;
    Result = inherited Create;
    Result.Record = locRecord;
  end;

  func Ѕланк–едакторѕо”молчанию: class BlankForm;
    Result = nil;
  end;

  func  артотекаѕо”молчанию: class CardForm;
    Result = nil;
  end;

func ќткрытьѕо«а€вке (лок«а€вка : ƒанные.«а€вкаЌаЌазначениеѕособи€): ƒанные.инт–асчет–еестраЅЋ;
  var лок–асчет : ƒанные.–асчет–еестраЅЋ;
    Result = nil;
    if (лок«а€вка = nil) :
      return nil;
    fi;
    лок–асчет = Ќайти«аписьѕо«а€вке(лок«а€вка);
    if (лок–асчет = nil) :
      return nil;
    fi;
    Result = ќткрытьѕо«аписи(лок–асчет);
end;


func Ќайти«аписьѕо«а€вке(лок«а€вка : ƒанные.«а€вкаЌаЌазначениеѕособи€) :  ƒанные.–асчет–еестраЅЋ;
var лок‘ильтр : string;
  лок‘ильтр = '«а€вкаЌаЌазначениеѕособи€ = ' + Str(лок«а€вка);
  Result = —»—2.‘ункцииƒокумента.QueryRecord(ƒанные.–асчет–еестраЅЋ, лок‘ильтр);
end;

proc —оздать«аписьѕо«а€вке(лок«а€вка : ƒанные.«а€вкаЌаЌазначениеѕособи€);
  var лок»нт : ƒанные.инт–асчет–еестраЅЋ;
    if (лок«а€вка.“ипѕособи€ = “ипѕособи€–ан—рок) :
      return;
    fi;
    лок»нт = ƒанные.инт–асчет–еестраЅЋ.Create;
    лок»нт.Ќова€«аписьѕо«а€вке(лок«а€вка);

    лок»нт.Record.Post;
end;



inobject public

  Record: ƒанные.–асчет–еестраЅЋ;

proc »нициализироватьѕо”молчанию synonym InitByDefault;
  inherited InitByDefault;
end;

proc Ќова€«аписьѕо«а€вке(лок«а€вка : ƒанные.«а€вкаЌаЌазначениеѕособи€);
  »нициализироватьѕо”молчанию;
  Self.Record.«а€вкаЌаЌазначениеѕособи€ = лок«а€вка;
  if (лок«а€вка.Ќазначениеѕособи€ = nil) :
    return;
  fi;
   опировать»зЅольничногоЋиста(лок«а€вка.Ќазначениеѕособи€);
  «аписать–асчет——(лок«а€вка.Ќазначениеѕособи€);
end;

proc  опировать»зЅольничногоЋиста(локЌазначениеѕособи€ : Ѕюджет_«ѕиƒƒ.–асчетныеќперации.Ќазначениеѕособи€);
  var локЅольничныйЋист : Ѕюджет_ѕерсонал.ƒокументы. адры.ЅольничныйЋист;
  --if (Self.Record.State <> Record.Created) then
  --  Self.Record.Edit;
  --end;
  if (локЌазначениеѕособи€ = nil) :
    return;
  fi;
  локЅольничныйЋист = локЌазначениеѕособи€.ЅольничныйЋист;
  if (локЅольничныйЋист = nil) :
    return;
  fi;
  Self.Record.—таховой—тажЋет = локЅольничныйЋист.—таховой—тажЋет;
  Self.Record.—таховой—тажћес = локЅольничныйЋист.—таховой—тажћес;
  Self.Record.ЌестраховойѕериодЋет = локЅольничныйЋист.ЌестраховойѕериодЋет;
  Self.Record.Ќестраховойѕериодћес = локЅольничныйЋист.Ќестраховойѕериодћес;
  Self.Record.ƒатаЌачалаќплаты = локЅольничныйЋист.ƒатаЌачалаќплаты;
  Self.Record.ƒатаќкончани€ќплаты = локЅольничныйЋист.ƒатаќкончани€ќплаты;
end;

proc «аписать–асчет——(локЌазначениеѕособи€ : Ѕюджет_«ѕиƒƒ.–асчетныеќперации.Ќазначениеѕособи€);
  var i,j : integer;
  var лок»нт : Ѕюджет_«ѕиƒƒ.–абочие.инт–асчет—з——;
  var лок–асчет—з—— : Ѕюджет_«ѕиƒƒ.–асчетныеќперации.—редний«аработок——;
    лок»нт = Ѕюджет_«ѕиƒƒ.–абочие.инт–асчет—з——.Ќайтиѕо«аписиЌазначени€ѕособи€(локЌазначениеѕособи€);
    if (лок»нт = nil) :
      return;
    fi;
    лок–асчет—з—— = лок»нт.Record;
    if (лок–асчет—з—— <> nil) :
      for i = 1..лок–асчет—з——.√од–асчета.Count do
        j = Self.Record.√од–асчета.Add;
        Self.Record.√од–асчета[j].”четный√од = лок–асчет—з——.√од–асчета[i].”четный√од;
        Self.Record.√од–асчета[j].—умма¬–асчете = лок–асчет—з——.√од–асчета[i].—умма¬–асчете;
        Self.Record.√од–асчета[j]. ƒ¬–асчете = лок–асчет—з——.√од–асчета[i]. ƒ орр;
      end;
    fi;
end;

--дл€ полей, заданных в бланках как вычислимые пол€

func ѕоле–едактораѕри¬ыводе(лок»м€ѕол€ : string) : variant;
  Result = '';
  if (лок»м€ѕол€ = '—таж_–еестр') :
    return —таж_–еестр;
  elsif (лок»м€ѕол€ = '“рудƒогƒо_6_ћес€цев_–еестр') :
    return “рудƒогƒо_6_ћес€цев_–еестр;
  elsif (лок»м€ѕол€ = '”слови€»счислени€_–еестр') :
    return ”слови€»счислени€_–еестр;
  fi;
end;


inobject private

func —таж_–еестр : string;
  Result = '—таж '+ —таж—трокой(Self.Record.—таховой—тажЋет,Self.Record.—таховой—тажћес);
  if (Self.Record.ЌестраховойѕериодЋет <> 0 or Self.Record.Ќестраховойѕериодћес <> 0) :
    Result =  Result + ' / в т.ч. нестрах.периоды ' +
              —таж—трокой(Self.Record.ЌестраховойѕериодЋет,Self.Record.Ќестраховойѕериодћес);
  fi;
end;

func “рудƒогƒо_6_ћес€цев_–еестр : string;
  Result = '';
  if (Self.Record.“рудƒогƒо_6_ћес€цев_— <> nil) :
    Result = 'с '+ Str(Self.Record.“рудƒогƒо_6_ћес€цев_—);
  fi;
  if (Self.Record.“рудƒогƒо_6_ћес€цев_ѕо <> nil) :
    Result = Result + ' по '+ Str(Self.Record.“рудƒогƒо_6_ћес€цев_ѕо);
  fi;
end;

func ”слови€»счислени€_–еестр : string;
  Result = '';
  if (Self.Record. од”словий»счислени€1 <> '') :
    Result = Self.Record. од”словий»счислени€1;
  fi;
  if (Self.Record. од”словий»счислени€2 <> '') :
    Result = Result + if(Result <> '' : ',', '') + Self.Record. од”словий»счислени€2;
  fi;
  if (Self.Record. од”словий»счислени€3 <> '') :
    Result = Result + if(Result <> '' : ',', '') + Self.Record. од”словий»счислени€3;
  fi;
end;



func —таж—трокой(локЋет : integer; локћес€цев : integer) : string;
  var ss : string;
    Result = '';
    if (локЋет <> 0) :
      Result = —таж—трокой√оды(локЋет);
    fi;
    ss = '';
    if (локћес€цев <> 0) :
      ss = Str(локћес€цев) + 'мес.';
    fi;
    Result = Result + if(Result <>'' and ss <>' ' : ' ', '') + ss;
end;

func —таж—трокой√оды(локЋет : integer) : string;
  var ii,jj : integer;
  var ss : string;
    Result = Str(локЋет);
    ii = локЋет - Int(Trunc(локЋет/10)) * 10;
    jj = локЋет - Int(Trunc(локЋет/100)) * 100;
    ss = 'лет';
    if (ii = 1 and jj <> 11) :
      ss = 'год';
    elsif ((ii  in [2,3,4]) and (not jj in [12,13,14])) :
      ss = 'года';
    fi;
    Result = Result + ' ' + ss;
end;



end