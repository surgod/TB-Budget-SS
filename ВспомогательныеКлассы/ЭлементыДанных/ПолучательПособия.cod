class "Получатель пособия";

import classes Константы,ФункцииЭлементовДанных;
import Базовый classes Константы;
import СИС2 classes Константы;

inclass public

  --@doc Конструктор: cоздание объекта по записи НашеУчреждение
func СоздатьПоЗаписиПолучателя (локПолучатель: Данные.ПолучательПособия) : ЭлементыДанных.ПолучательПособия;
  Result = inherited Create;
  Result.ПоляПоЗаписиПолучателя(локПолучатель);
end;

func СоздатьПоЗаписиСубъекта (локСубъект: Базовый.Данные.Субъект) : ЭлементыДанных.ПолучательПособия;
  Result = inherited Create;
  Result.ПоляПоЗаписиСубъекта(локСубъект);
end;





inobject public

func ЗаписьПолучателя : Данные.ПолучательПособия;
  return _ЗаписьПолучателя;
end;

func СтраховойСлучай : Данные.СтраховойСлучай;
  return _СтраховойСлучай;
end;

func СчетчикВерсий : integer;
  return _СчетчикВерсий;
end;

func Субъект : Базовый.Данные.Субъект;
  return _Субъект;
end;

func ФамилияПолучателя : string;
  return _ФамилияПолучателя;
end;

func ИмяПолучателя : string;
  return _ИмяПолучателя;
end;

func ОтчествоПолучателя : string;
  return _ОтчествоПолучателя;
end;

func ДатаРождения : date;
  return _ДатаРождения;
end;


func Телефон : string;
  return _Телефон;
end;

proc ЗапомнитьФамилияПолучателя(локФамилияПолучателя : string);
  _ФамилияПолучателя = локФамилияПолучателя;
end;

proc ЗапомнитьИмяПолучателя(локИмяПолучателя : string);
  _ИмяПолучателя = локИмяПолучателя;
end;

proc ЗапомнитьОтчествоПолучателя(локОтчествоПолучателя : string);
  _ОтчествоПолучателя = локОтчествоПолучателя;
end;

proc ЗапомнитьТелефон(локТелефон : string);
  _Телефон = локТелефон;
end;

proc ЗапомнитьДатаРождения(локДатаРождения : date);
  _ДатаРождения = локДатаРождения;
end;

proc Сохранить ;
  _ЗаписьПолучателя.Edit;
  _ЗаписьПолучателя.ФамилияПолучателя = _ФамилияПолучателя;
  _ЗаписьПолучателя.ИмяПолучателя = _ИмяПолучателя;
  _ЗаписьПолучателя.ОтчествоПолучателя = _ОтчествоПолучателя;
  _ЗаписьПолучателя.Телефон = _Телефон;
  _ЗаписьПолучателя.ДатаРождения = _ДатаРождения;
end;




--func АдресРегистрации : Базовый.Справочники.Адрес;
--  return _АдресРегистрации;
--end;

--func АдресПроживания : Базовый.Справочники.Адрес;
--  return _АдресПроживания;
--end;


--func АдресРегистрации : Справочники.АдресСоцСтрах;
--  return _АдресРегистрации;
--end;


--func АдресПроживания : Справочники.АдресСоцСтрах;
--  return _АдресПроживания;
--end;

proc ЗапомнитьСтраховойСлучай(локСтраховойСлучай : Данные.СтраховойСлучай);
  _СтраховойСлучай = локСтраховойСлучай;
end;

func ОсновныеСведенияСтрокой : string;
  return ''; --ОсновныеСведенияВСтроку;
end;

--func АдресРегистрацииСтрокой : string;
--  Result = '';
--  if (_ЗаписьПолучателя = nil) :
--    return if(_АдресРегистрации_ФЛ <> nil : _АдресРегистрации_ФЛ.Адрес_Строкой , '' );
--  else
--    return if(_АдресРегистрации <> nil : _АдресРегистрации.Адрес_Строкой , '' );
--  fi;
--end;

--func АдресПроживанияСтрокой : string;
--  Result = '';
--  if (_ЗаписьПолучателя = nil) :
--    return if(_АдресПроживания_ФЛ <> nil : _АдресПроживания_ФЛ.Адрес_Строкой , '' );
--  else
--    return if(_АдресПроживания <> nil : _АдресПроживания.Адрес_Строкой , '' );
--  fi;
--end;

--func АдресРегистрацииСтрокой : string;
--  Result = '';
--  if (_АдресРегистрации <> nil) :
--    return _АдресРегистрации.Адрес_Строкой;
--  fi;
--end;

--func АдресПроживанияСтрокой : string;
--  Result = '';
--  if (_АдресПроживания <> nil) :
--    return _АдресПроживания.Адрес_Строкой;
--  fi;
--end;

--@doc Возвращает массив параметров, каждая строка - [имя поля заявления, значение поля]
func ПараметрыНовойЗаписи : variant[2];
  Result = nil;
  Result[1] = ['Имя',ФИОТ];
  Result[2] = ['Наим',ФИОТ];
  Result[3] = ['СтраховойСлучай',_СтраховойСлучай];
  Result[4] = ['НашеУчреждение',_СтраховойСлучай.НашеУчреждение];
  Result[5] = ['Субъект',_Субъект];
  Result[6] = ['СчетчикВерсий',_СчетчикВерсий];
  Result[7] = ['ФамилияПолучателя',_ФамилияПолучателя];
  Result[8] = ['ИмяПолучателя',_ИмяПолучателя];
  Result[9] = ['ОтчествоПолучателя',_ОтчествоПолучателя];
  Result[10] = ['ДатаРождения',_ДатаРождения];
end;



inobject private

_ЗаписьПолучателя : Данные.ПолучательПособия;
_СтраховойСлучай : Данные.СтраховойСлучай;
_СчетчикВерсий : integer;
_Субъект : Базовый.Данные.Субъект;
_ФамилияПолучателя : string;
_ИмяПолучателя : string;
_ОтчествоПолучателя : string;
_ДатаРождения : date;
_Телефон : string;
--_АдресРегистрации   : Справочники.АдресСоцСтрах;
--_АдресПроживания  : Справочники.АдресСоцСтрах;
--_АдресРегистрации_ФЛ   : Базовый.Справочники.Адрес;
--_АдресПроживания_ФЛ  : Базовый.Справочники.Адрес;

proc ПоляПоЗаписиПолучателя(локПолучатель: Данные.ПолучательПособия);
  _ЗаписьПолучателя = локПолучатель;
  _СтраховойСлучай = локПолучатель.СтраховойСлучай;
  _СчетчикВерсий = локПолучатель.СчетчикВерсий;
  _Субъект = локПолучатель.Субъект;
  _ФамилияПолучателя = локПолучатель.ФамилияПолучателя;
  _ИмяПолучателя  = локПолучатель.ИмяПолучателя;
  _ОтчествоПолучателя = локПолучатель.ОтчествоПолучателя;
  _ДатаРождения = локПолучатель.ДатаРождения;
  _Телефон = локПолучатель.Телефон;
  --_АдресРегистрации = АдресПолучателяПоТипу(_ЗаписьПолучателя,тапПрописка);
  --_АдресПроживания = АдресПолучателяПоТипу(_ЗаписьПолучателя,тапФактический);
  --_АдресРегистрации = АдресПолучателяПоТипу(_ЗаписьПолучателя,тапПрописка);
  --_АдресПроживания = АдресПолучателяПоТипу(_ЗаписьПолучателя,тапФактический);
  --_АдресРегистрации_ФЛ  = nil;
  --_АдресПроживания_ФЛ = nil;
end;

proc ПоляПоЗаписиСубъекта(локСубъект : Базовый.Данные.Субъект);
  var локФизЛицо : Базовый.Данные.Субъект;
    локФизЛицо = локСубъект.ФизЛицо;
    _ЗаписьПолучателя = nil;
    _СтраховойСлучай = nil;
    _СчетчикВерсий = 0;
    _Субъект = локСубъект;
    _ФамилияПолучателя = Базовый.ФункцииСубъекта.Фамилия_НаДату(локФизЛицо,Today,фсИменительныйЕдин);
    _ИмяПолучателя  = Базовый.ФункцииСубъекта.Имя_НаДату(локФизЛицо,Today,фсИменительныйЕдин);
    _ОтчествоПолучателя = Базовый.ФункцииСубъекта.Отчество_НаДату(локФизЛицо,Today,фсИменительныйЕдин);
    _ДатаРождения = локФизЛицо.ДатаРождения;
    _Телефон = локФизЛицо.Телефон;
    --_АдресРегистрации = nil;
    --_АдресПроживания = nil;
    --_АдресРегистрации_ФЛ  = ТББ_Базовый.Библио.ПолучитьАдресСубъекта(локФизЛицо,Today);
    --_АдресПроживания_ФЛ = nil;
end;

func ФИОТ : string;
  Result = _ФамилияПолучателя + ' ' + _ИмяПолучателя;
  Result = Result + if(_ОтчествоПолучателя <> '' : ' ' + _ОтчествоПолучателя, '');
end;





end