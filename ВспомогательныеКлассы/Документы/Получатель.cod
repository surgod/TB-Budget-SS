class "Получатель пособия";

import classes Константы,ФункцииПервичныхДокументов;
import Базовый classes Константы;
import СИС2 classes Константы;

inclass public

  --@doc Конструктор: cоздание объекта по записи заявления
  func СоздатьПоЗаписиЗаявления (локЗаявление: Документы.Первичные.Заявление) :  Документы.Получатель;
    Result = inherited Create;
    Result.ПоляПоЗаписиЗаявления(локЗаявление);
  end;

inobject public

func Заявление : Документы.Первичные.Заявление;
  return _Заявление;
end;

func Субъект : Базовый.Данные.Субъект;
  return _Субъект;
end;

func Фамилия : string;
  return _Фамилия;
end;

func Имя : string;
  return _Имя;
end;

func Отчество : string;
  return _Отчество;
end;

func ДатаРождения : date;
  return _ДатаРождения;
end;

func Телефон : string;
  return _Телефон;
end;

func БанкРеквизитыПолучателя : Документы.БанкРеквизитыПолучателя;
  return _БанкРеквизитыПолучателя;
end;

func АдресРегистрации : Документы.АдресПолучателя;
  return _АдресРегистрации;
end;

func АдресПроживания : Документы.АдресПолучателя;
  return _АдресПроживания;
end;

proc ЗаполнитьПоУмолчанию;
  ОсновныеСведенияПоУмолчанию;
  _АдресРегистрации.ЗаполнитьПоУмолчанию;
  _АдресПроживания.УдалитьЗаписьАдреса;
  _АдресПроживания = nil;
end;


proc ОчиститьДокументы;
  УдалитьЗаявлениеИзКлассаДокументов (_Заявление,Документы.Первичные.Получатель.БанкРеквизиты);
  УдалитьЗаявлениеИзКлассаДокументов (_Заявление,Документы.Первичные.Получатель.Адрес);
  УдалитьЗаявлениеИзКлассаДокументов (_Заявление,Документы.Первичные.Получатель.Удостоверение);
  УдалитьЗаявлениеИзКлассаДокументов (_Заявление,Документы.Первичные.Получатель.ДокументОПроживании);
end;


inobject private

_Заявление : Документы.Первичные.Заявление;
_Субъект : Базовый.Данные.Субъект;
_Фамилия : string;
_Имя : string;
_Отчество : string;
_ДатаРождения : date;
_Телефон : string;
_БанкРеквизитыПолучателя : Документы.БанкРеквизитыПолучателя;
--_Удостоверение : Документы.Удостоверение;
--_ДокументОПроживании : Документы.ДокументОПроживании;
_АдресРегистрации : Документы.АдресПолучателя;
_АдресПроживания : Документы.АдресПолучателя;

proc ПоляПоЗаписиЗаявления(локЗаявление: Документы.Первичные.Заявление);
  _Заявление = локЗаявление;
  _Субъект = локЗаявление.Субъект;
  _Фамилия = локЗаявление.Фамилия;
  _Имя  = локЗаявление.Имя;
  _Отчество = локЗаявление.Отчество;
  _ДатаРождения = локЗаявление.ДатаРождения;
  _Телефон = локЗаявление.Телефон;
  --_БанкРеквизитыПолучателя = Документы.БанкРеквизитыПолучателя.СоздатьПоЗаписиЗаявления (локЗаявление);
  --_АдресРегистрации = Документы.АдресПолучателя.СоздатьПоЗаписиЗаявленияИТипу (локЗаявление,ТипАдресаРегистр);
  --_АдресПроживания = Документы.АдресПолучателя.СоздатьПоЗаписиЗаявленияИТипу (локЗаявление,ТипАдресаЖитель);
end;

proc ОсновныеСведенияПоУмолчанию;
  var локФизЛицо : Базовый.Данные.Субъект;
  var локНаДату : date;
    if (_Субъект <> nil) :
      локФизЛицо = _Субъект.ФизЛицо;
      локНаДату  = if(_Заявление.Дата <> nil: _Заявление.Дата, Today);
      _Фамилия = Базовый.ФункцииСубъекта.Фамилия_НаДату(локФизЛицо,локНаДату,фсРодительныйЕдин);
      _Имя = Базовый.ФункцииСубъекта.Имя_НаДату(локФизЛицо,локНаДату,фсРодительныйЕдин);
      _Отчество = Базовый.ФункцииСубъекта.Отчество_НаДату(локФизЛицо,локНаДату,фсРодительныйЕдин);
      _ДатаРождения = локФизЛицо.ДатаРождения;
    else
      _Фамилия = '';
      _Имя = '';
      _Отчество ='';
      _ДатаРождения = nil;
    fi;
end;

proc АдресРегистрацииПоУмолчанию (локЗаявление: Документы.Первичные.Заявление) ;
  var локАдрес,локАдрес_Персонал : Базовый.Справочники.Адрес;
  var локФизЛицо : Базовый.Данные.Субъект;
  var локНаДату : date;
  var локТипАдреса : Базовый.Справочники.ТипАдреса;
  var i : integer;
    локФизЛицо = локЗаявление.Субъект.ФизЛицо;
    локНаДату  = if(локЗаявление.Дата <> nil: локЗаявление.Дата, Today);
    локАдрес_Персонал = ТББ_Базовый.Библио.ПолучитьАдресСубъекта(локФизЛицо,локНаДату);
    if (локАдрес_Персонал <> nil) :
      локАдрес = локАдрес_Персонал.Clone;
      локТипАдреса = ТипАдреса_Прописка;
      локАдрес.Субъект = nil;
      локАдрес.Заявление = локЗаявление;
      локАдрес.ПолучательПособия = локЗаявление.Субъект;
      локАдрес.Позиции.Clear;
      i = локАдрес.Позиции.Add;
      локАдрес.Позиции[i].ТипАдреса = локТипАдреса;
      локАдрес.ИмяТипаАдреса = Предопределения[тапПрописка,1];
      локАдрес.Post;
    fi;
end;

func ТипАдреса_Прописка : Базовый.Справочники.ТипАдреса;
  var локФильтр : string;
    локФильтр = "Код='" + Предопределения[тапПрописка,1] +"'";
    Result = СИС2.ФункцииДокумента.QueryRecord(Базовый.Справочники.ТипАдреса, локФильтр);
end;


end