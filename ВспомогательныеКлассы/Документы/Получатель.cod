class "Получатель пособия";

import classes Константы,ФункцииПервичныхДокументов;
import СИС2 classes Константы;

inclass public

  --@doc Конструктор: cоздание объекта по записи заявления
  func СоздатьПоЗаписиЗаявления (локЗаявление: Документы.Первичные.Заявление) :  Документы.Получатель;
    Result = inherited Create;
    Result.ПоляПоЗаписиЗаявления(локЗаявление);
  end;

inobject public

func Заявление : Документы.Первичные.Заявление;
  return _Заявление;
end;

func Субъект : Базовый.Данные.Субъект;
  return _Субъект;
end;

func Фамилия : string;
  return _Фамилия;
end;

func Имя : string;
  return _Имя;
end;

func Отчество : string;
  return _Отчество;
end;

func ДатаРождения : date;
  return _ДатаРождения;
end;

func Телефон : string;
  return _Телефон;
end;

func БанкРеквизитыПолучателя : Документы.БанкРеквизитыПолучателя;
  return _БанкРеквизитыПолучателя;
end;

func Удостоверение : Документы.УдостоверениеПолучателя;
  return _Удостоверение;
end;


func АдресРегистрации : Документы.АдресПолучателя;
  return _АдресРегистрации;
end;

func АдресПроживания : Документы.АдресПолучателя;
  return _АдресПроживания;
end;

proc ЗаполнитьАдресаПоУмолчанию;
  _АдресРегистрации.ЗаполнитьПоУмолчанию;
  _АдресПроживания.УдалитьЗаписьАдреса;
end;

func ОсновныеСведенияСтрокой : string;
  return ОсновныеСведенияВСтроку;
end;


proc ЗапомнитьФамилия(локСтрока : string);
  _Фамилия = локСтрока;
end;

proc ЗапомнитьИмя(локСтрока : string);
  _Имя = локСтрока;
end;

proc ЗапомнитьОтчество(локСтрока : string);
  _Отчество = локСтрока;
end;

proc ЗапомнитьТелефон(локСтрока : string);
  _Телефон = локСтрока;
end;

proc ЗапомнитьДатаРождения(локДата : date);
  _ДатаРождения = локДата;
end;



inobject private

_Заявление : Документы.Первичные.Заявление;
_Субъект : Базовый.Данные.Субъект;
_Фамилия : string;
_Имя : string;
_Отчество : string;
_ДатаРождения : date;
_Телефон : string;
_БанкРеквизитыПолучателя : Документы.БанкРеквизитыПолучателя;
_Удостоверение : Документы.УдостоверениеПолучателя;
--_ДокументОПроживании : Документы.ДокументОПроживании;
_АдресРегистрации : Документы.АдресПолучателя;
_АдресПроживания : Документы.АдресПолучателя;

proc ПоляПоЗаписиЗаявления(локЗаявление: Документы.Первичные.Заявление);
  _Заявление = локЗаявление;
  _Субъект = локЗаявление.Субъект;
  _Фамилия = локЗаявление.Фамилия;
  _Имя  = локЗаявление.Имя;
  _Отчество = локЗаявление.Отчество;
  _ДатаРождения = локЗаявление.ДатаРождения;
  _Телефон = локЗаявление.Телефон;
  _БанкРеквизитыПолучателя = Документы.БанкРеквизитыПолучателя.СоздатьПоЗаписиЗаявления (локЗаявление);
  _Удостоверение = Документы.УдостоверениеПолучателя.СоздатьПоЗаписиЗаявления (локЗаявление);
  _АдресРегистрации = Документы.АдресПолучателя.СоздатьПоЗаписиЗаявленияИТипу (локЗаявление,ТипАдресаРегистр);
  _АдресПроживания = Документы.АдресПолучателя.СоздатьПоЗаписиЗаявленияИТипу (локЗаявление,ТипАдресаЖитель);
end;

func ОсновныеСведенияВСтроку : string;
  Result = _Фамилия + ' ' + _Имя;
  Result = Result + if(_Отчество <> '' : ' ' + _Отчество, '');
  Result = Result + if(_ДатаРождения <> nil  : ',дата рождения ' + Str(_ДатаРождения), '');
  Result = Result + if(_Телефон <> ''  : ', телефон ' + _Телефон, '');
end;


proc ОсновныеСведенияПоУмолчанию;
  var локФизЛицо : Базовый.Данные.Субъект;
  var локНаДату : date;
    if (_Субъект <> nil) :
      локФизЛицо = _Субъект.ФизЛицо;
      локНаДату  = if(_Заявление.Дата <> nil: _Заявление.Дата, Today);
      _Фамилия = Базовый.ФункцииСубъекта.Фамилия_НаДату(локФизЛицо,локНаДату,фсРодительныйЕдин);
      _Имя = Базовый.ФункцииСубъекта.Имя_НаДату(локФизЛицо,локНаДату,фсРодительныйЕдин);
      _Отчество = Базовый.ФункцииСубъекта.Отчество_НаДату(локФизЛицо,локНаДату,фсРодительныйЕдин);
      _ДатаРождения = локФизЛицо.ДатаРождения;
    else
      _Фамилия = '';
      _Имя = '';
      _Отчество ='';
      _ДатаРождения = nil;
    fi;
end;



end