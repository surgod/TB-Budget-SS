class "Общая часть заявления";

import classes Константы;
import СИС2 classes Константы;


inclass public

  --@doc Конструктор: cоздание объекта по записи НашеУчреждение
  func СоздатьДляНашеУчреждение (локНашеУчреждение: Базовый.Данные.Субъект) :  Документы.РеквизитыЗаявления;
    Result = inherited Create;
    Result.ЗапомнитьНашеУчреждение(локНашеУчреждение);
    Result._Дата = Today;
  end;

inobject public

func НашеУчреждение : Базовый.Данные.Субъект;
  return _НашеУчреждение;
end;

func Субъект : Базовый.Данные.Субъект;
  return _Субъект;
end;

func ТипРеестра : integer;
  return _ТипРеестра;
end;


func ДатаЗаявления : date;
  return _Дата;
end;


proc ЗапомнитьНашеУчреждение(локНашеУчреждение : Базовый.Данные.Субъект);
  _НашеУчреждение = локНашеУчреждение;
  if (_НашеУчреждение <> nil) :
    _ПолноеИмяУчреждения = _НашеУчреждение.Наим;
    _НаимТОФСС = _НашеУчреждение.НаимОрганаФСС;
  else
    _ПолноеИмяУчреждения = '';
    _НаимТОФСС = '';
  fi;

end;

proc ЗапомнитьСубъект(локСубъект : Базовый.Данные.Субъект);
  _Субъект = локСубъект;
  ФИО_Заявителя_ПоУмол;
end;

proc ЗапомнитьТипРеестра(локТипРеестра : integer);
  _ТипРеестра = локТипРеестра;
end;

proc ЗапомнитьДатаЗаявления(локДата : date);
  _Дата = локДата;
end;


--@doc Возвращает массив параметров, каждая строка - [имя поля заявления, значение поля]
func ПараметрыНовогоЗаявления : variant[2];
  Result = nil;
  Result[1] = ['НашеУчреждение',_НашеУчреждение];
  Result[2] = ['Субъект',_Субъект];
  Result[3] = ['ТипРеестра',_ТипРеестра];
  Result[4] = ['ПолноеИмяУчреждения',_ПолноеИмяУчреждения];
  Result[5] = ['НаимТОФСС',_НаимТОФСС];
  Result[6] = ['ФамилияЗаявителя_Род',_ФамилияЗаявителя_Род];
  Result[7] = ['ИмяЗаявителя_Род',_ИмяЗаявителя_Род];
  Result[8] = ['ОтчествоЗаявителя_Род',_ОтчествоЗаявителя_Род];
  Result[9] = ['Дата',_Дата];
  Result[10] = ['Фамилия',_Фамилия];
  Result[11] = ['Имя',_Имя];
  Result[12] = ['Отчество',_Отчество];
  Result[13] = ['ДатаРождения',_ДатаРождения];
end;

inobject private

_НашеУчреждение : Базовый.Данные.Субъект;
_Субъект : Базовый.Данные.Субъект;
_ТипРеестра :  integer;
_ПолноеИмяУчреждения  : string;
_НаимТОФСС:   string;
_ФамилияЗаявителя_Род  : string;
_ИмяЗаявителя_Род  : string;
_ОтчествоЗаявителя_Род  : string;
_Дата : date;
_Фамилия : string;
_Имя : string;
_Отчество : string;
_ДатаРождения : date;



proc ФИО_Заявителя_ПоУмол;
  var локФизЛицо : Базовый.Данные.Субъект;
  var локНаДату : date;
    if (_Субъект <> nil) :
      локФизЛицо = _Субъект.ФизЛицо;
      локНаДату = if (_Дата = nil : Today, _Дата );
      _ФамилияЗаявителя_Род = Базовый.ФункцииСубъекта.Фамилия_НаДату(локФизЛицо,локНаДату,фсРодительныйЕдин);
      _ИмяЗаявителя_Род = Базовый.ФункцииСубъекта.Имя_НаДату(локФизЛицо,локНаДату,фсРодительныйЕдин);
      _ОтчествоЗаявителя_Род = Базовый.ФункцииСубъекта.Отчество_НаДату(локФизЛицо,локНаДату,фсРодительныйЕдин);
      _ФамилияЗаявителя_Род = Trim(_ФамилияЗаявителя_Род);
      _ИмяЗаявителя_Род = Trim(_ИмяЗаявителя_Род);
      _ОтчествоЗаявителя_Род = Trim(_ОтчествоЗаявителя_Род);
      _Фамилия = Базовый.ФункцииСубъекта.Фамилия_НаДату(локФизЛицо,локНаДату,фсИменительныйЕдин);
      _Имя = Базовый.ФункцииСубъекта.Имя_НаДату(локФизЛицо,локНаДату,фсИменительныйЕдин);
      _Отчество = Базовый.ФункцииСубъекта.Отчество_НаДату(локФизЛицо,локНаДату,фсИменительныйЕдин);
      _Фамилия = Trim(_Фамилия);
      _Имя = Trim(_Имя);
      _Отчество = Trim(_Отчество);
      _ДатаРождения = локФизЛицо.ДатаРождения;
    else
      _ФамилияЗаявителя_Род = '';
      _ИмяЗаявителя_Род = '';
      _ОтчествоЗаявителя_Род ='';
      _Фамилия = '';
      _Имя = '';
      _Отчество ='';
    fi;
end;



end