class "Общая часть заявления";

import classes Константы;
import СИС2 classes Константы;

inclass public

  --@doc Конструктор: cоздание объекта по записи заявления
  func СоздатьПоЗаписиЗаявления (локЗаявление: Документы.Первичные.Заявление) :  Документы.РеквизитыЗаявления;
    Result = inherited Create;
    Result.ПоляПоЗаписиЗаявления(локЗаявление);
  end;

inobject public

func Субъект : Базовый.Данные.Субъект;
  return _Субъект;
end;

func ТипРеестра : integer;
  return _ТипРеестра;
end;

func ПолноеИмяУчреждения : string;
  return _ПолноеИмяУчреждения;
end;

func НаимТОФСС : string;
  return _НаимТОФСС;
end;

func ФамилияЗаявителя_Род : string;
  return _ФамилияЗаявителя_Род;
end;

func ИмяЗаявителя_Род : string;
  return _ИмяЗаявителя_Род;
end;

func ОтчествоЗаявителя_Род : string;
  return _ОтчествоЗаявителя_Род;
end;

func ИмяТипаРеестра : string;
  Result = '';
  if (_ТипРеестра =ТипРеестраБЛ ) :
    return 'Реестр сведений для пособий по временной нетрудоспособности, по беременности и родам и вставшим на учет в ранние сроки беременности';
  elsif (_ТипРеестра = ТипРеестраРожд ) :
    return 'Реестр сведений для единовременного пособия при рождении ребенка';
  elsif (_ТипРеестра = ТипРеестраУходРеб ) :
    return 'Реестр сведений для ежемесячного пособия по уходу за ребенком';
  fi;
  return _ОтчествоЗаявителя_Род;
end;

proc ЗапомнитьСубъект(локСубъект : Базовый.Данные.Субъект);
  _Субъект = локСубъект;
end;

proc ЗапомнитьПолноеИмяУчреждения(локПолноеИмяУчреждения : string);
  _ПолноеИмяУчреждения = локПолноеИмяУчреждения;
end;

proc ЗапомнитьНаимТОФСС(локНаимТОФСС : string);
  _НаимТОФСС = локНаимТОФСС;
end;

proc ЗапомнитьФамилияЗаявителя_Род(локФамилияЗаявителя_Род : string);
  _ФамилияЗаявителя_Род = локФамилияЗаявителя_Род;
end;

proc ЗапомнитьИмяЗаявителя_Род(локИмяЗаявителя_Род : string);
  _ИмяЗаявителя_Род = локИмяЗаявителя_Род;
end;

proc ЗапомнитьОтчествоЗаявителя_Род(локОтчествоЗаявителя_Род : string);
  _ОтчествоЗаявителя_Род = локОтчествоЗаявителя_Род;
end;

proc ЗаполнитьПоУмолчанию;
  _ПолноеИмяУчреждения = _НашеУчреждение.Наим;
  _НаимТОФСС = _НашеУчреждение.НаимОрганаФСС;
  ФИО_Заявителя_ПоУмол;
end;


inobject private

_Заявление : Документы.Первичные.Заявление;
_НашеУчреждение : Базовый.Данные.Субъект;
_Субъект : Базовый.Данные.Субъект;
_ТипРеестра :  integer;
_ПолноеИмяУчреждения  : string;
_НаимТОФСС:   string;
_ФамилияЗаявителя_Род  : string;
_ИмяЗаявителя_Род  : string;
_ОтчествоЗаявителя_Род  : string;



proc ПоляПоЗаписиЗаявления(локЗаявление: Документы.Первичные.Заявление);
  _Заявление = локЗаявление;
  _НашеУчреждение = локЗаявление.НашеУчреждение;
  _Субъект = локЗаявление.Субъект;
  _ТипРеестра = локЗаявление.ТипРеестра;
  _ПолноеИмяУчреждения = локЗаявление.ПолноеИмяУчреждения;
  _НаимТОФСС = локЗаявление.НаимТОФСС;
  _ФамилияЗаявителя_Род = локЗаявление.ФамилияЗаявителя_Род;
  _ИмяЗаявителя_Род = локЗаявление.ИмяЗаявителя_Род;
  _ОтчествоЗаявителя_Род = локЗаявление.ОтчествоЗаявителя_Род;
end;

proc ФИО_Заявителя_ПоУмол;
  var локФизЛицо : Базовый.Данные.Субъект;
  var локНаДату : date;
    if (_Субъект <> nil) :
      локФизЛицо = _Субъект.ФизЛицо;
      локНаДату  = if(_Заявление.Дата <> nil: _Заявление.Дата, Today);
      _ФамилияЗаявителя_Род = Базовый.ФункцииСубъекта.Фамилия_НаДату(локФизЛицо,локНаДату,фсРодительныйЕдин);
      _ИмяЗаявителя_Род = Базовый.ФункцииСубъекта.Имя_НаДату(локФизЛицо,локНаДату,фсРодительныйЕдин);
      _ОтчествоЗаявителя_Род = Базовый.ФункцииСубъекта.Отчество_НаДату(локФизЛицо,локНаДату,фсРодительныйЕдин);
    else
      _ФамилияЗаявителя_Род = '';
      _ИмяЗаявителя_Род = '';
      _ОтчествоЗаявителя_Род ='';
    fi;
end;



end