class "‘ункции группировки и расшифровки констант";

import classes  онстанты;

inclass public

func “ип–еестраѕо“ипуѕособи€(лок“ипѕособи€ : integer) : integer;
  Result = “ип–еестраЌѕ_Ќет;
  if (лок“ипѕособи€ in [“ипѕособи€ЅЋ,“ипѕособи€Ѕерем,“ипѕособи€–ан—рок,“ипѕособи€“равма]) :
    return “ип–еестраЌѕ_ЅЋ;
  elsif (лок“ипѕособи€ = “ипѕособи€–ожд) :
    return “ип–еестраЌѕ_–ожд;
  elsif (лок“ипѕособи€ = “ипѕособи€”ход–еб) :
    return “ип–еестраЌѕ_”ход–еб;
  fi;
end;



--@doc возвращает типы пособий дл€ за€вки на пр€мые выплаты

func “ипыѕособийƒл€ѕр€мых¬ыплат : integer[];
  Result = nil;
  Result[1] = “ипѕособи€ЅЋ;
  Result[2] = “ипѕособи€Ѕерем;
  Result[3] = “ипѕособи€–ан—рок;
  Result[4] = “ипѕособи€–ожд;
  Result[5] = “ипѕособи€”ход–еб;
  Result[6] = “ипѕособи€“равма;
end;


--@doc возвращает тип пособи€ по коду вида страхового обеспечени€

func “ипѕособи€ѕо оду—ќ (лок од : string) : integer;
  var лок‘ильтр : string;
  var локЌастройка : Ќастройки.—правочники.“ипѕособи€ƒл€¬ида—ќ;
    Result = “ипѕособи€Ќет;
    лок‘ильтр = ' од="' + лок од + '"';
    локЌастройка  = —»—2.‘ункцииƒокумента.QueryLastRecord(Ќастройки.—правочники.“ипѕособи€ƒл€¬ида—ќ,лок‘ильтр);
    if (локЌастройка <> nil) :
      Result = локЌастройка.“ипѕособи€—оц—трах;
    fi;
end;


--@doc возвращает массив DocId видов страхового обеспечени€ по массиву допустимых типов пособий

func ‘ильтр¬идов—ќѕо“»памѕособий(лок“ипыѕособий[] : integer) : integer[];
  var лок¬ид—ќ : Ѕюджет_«ѕиƒƒ.—правочники.¬иды—траховогоќбеспечени€;
  var лок‘ильтр : string;
  Result = nil;
  with Query.Create([Ќастройки.—правочники.“ипѕособи€ƒл€¬ида—ќ]) do
    Filter = '“ипѕособи€—оц—трах  in ' + Str(лок“ипыѕособий);
    Select;
    while not EOF do
      лок‘ильтр = ' од="' + Current. од + '"';
      лок¬ид—ќ = —»—2.‘ункцииƒокумента.QueryLastRecord(Ѕюджет_«ѕиƒƒ.—правочники.¬иды—траховогоќбеспечени€,лок‘ильтр);
      if (лок¬ид—ќ <> nil) :
        InsertInArray(Result, LengthOfArray(Result) + 1, лок¬ид—ќ.DocId);
      end;
      Next;
    end;
  end;
end;

proc  оды»¬иды—ќ (var лок оды—ќ[] : string; var лок¬иды—ќ[] : Ѕюджет_«ѕиƒƒ.—правочники.¬иды—траховогоќбеспечени€);
  var i : integer;
  лок оды—ќ = nil;
  лок¬иды—ќ = nil;
  with Query.Create([Ѕюджет_«ѕиƒƒ.—правочники.¬иды—траховогоќбеспечени€]) do
    Select;
    while not EOF do
      if (not Current.IsGroup) :
        i = LengthOfArray(лок оды—ќ) + 1;
        InsertInArray(лок оды—ќ, i,  Current. од);
        InsertInArray(лок¬иды—ќ, i,  Current);
      fi;
      Next;
    end;
  end;
end;


end