class "‘ункции работы с запис€ми элементов данных";

import classes  онстанты;
import Ѕазовый classes  онстанты;
import —»—2 classes ‘ункции–““»;

inclass public

--@doc возвращает ссылку на запись последнего дл€ данного страхового случа€ получател€
func ѕолучательƒл€—трах—луча€ (лок—трах—лучай : ƒанные.—траховой—лучай) : ƒанные.ѕолучательѕособи€;
  Result = nil;
  with Query.Create([ƒанные.ѕолучательѕособи€]) do
    Filter = '—траховой—лучай = ' + Str(лок—трах—лучай);
    Order = '—четчик¬ерсий';
    Select;
    if (not EOF) :
      Last;
      Result = Current;
    fi;
  end;
end;

func Ѕанк–еквизитыƒл€—трах—луча€ (лок—трах—лучай : ƒанные.—траховой—лучай) : ƒанные.Ѕанк–еквизиты;
  Result = nil;
  with Query.Create([ƒанные.Ѕанк–еквизиты]) do
    Filter = '—траховой—лучай = ' + Str(лок—трах—лучай);
    Order = '—четчик¬ерсий';
    Select;
    if (not EOF) :
      Last;
      Result = Current;
    fi;
  end;
end;


func «апись“ипјдреса (лок“ипјдреса : integer): Ѕазовый.—правочники.“ипјдреса;
  var лок‘ильтр : string;
    лок‘ильтр = " од='" + ѕредопределени€[лок“ипјдреса,1] +"'";
    Result = —»—2.‘ункцииƒокумента.QueryRecord(Ѕазовый.—правочники.“ипјдреса, лок‘ильтр);
end;

proc јдрес–егистрацииѕо”мол (локѕолучательѕособи€ : ƒанные.ѕолучательѕособи€);
  var локјдрес_‘Ћ,локјдрес—— : Ѕазовый.—правочники.јдрес;
  --var локјдрес—— : —правочники.јдрес—оц—трах;
  var лок‘изЋицо : Ѕазовый.ƒанные.—убъект;
  var лок«апись“ипјдреса  : Ѕазовый.—правочники.“ипјдреса;
  var i : integer;
    лок‘изЋицо = локѕолучательѕособи€.—убъект.‘изЋицо;
    локјдрес_‘Ћ = “ЅЅ_Ѕазовый.Ѕиблио.ѕолучитьјдрес—убъекта(лок‘изЋицо,Today);
    if (локјдрес_‘Ћ <> nil) :
      локјдрес—— = локјдрес_‘Ћ.Clone;
      локјдрес——.—убъект = nil;
      локјдрес——.ѕолучатель‘изЋицо = лок‘изЋицо;
      --локјдрес——.ѕолучательѕособи€ = локѕолучательѕособи€;
      лок«апись“ипјдреса = «апись“ипјдреса (тапѕрописка);
      локјдрес——.ѕозиции.Clear;
      i = локјдрес——.ѕозиции.Add;
      локјдрес——.ѕозиции[i].“ипјдреса = лок«апись“ипјдреса;
      локјдрес——.Post;
    fi;
end;

proc ”дЋичностиѕо”мол (локѕолучательѕособи€ : ƒанные.ѕолучательѕособи€);
  var лок”достоверение‘Ћ,лок”достоверение—— : Ѕазовый.—правочники.”достоверение;
  var лок‘изЋицо : Ѕазовый.ƒанные.—убъект;
    лок‘изЋицо = локѕолучательѕособи€.—убъект.‘изЋицо;
    лок”достоверение‘Ћ = “ЅЅ_Ѕазовый.Ѕиблио.ѕолучитьƒокумент—убъекта(лок‘изЋицо,Today);
    if (лок”достоверение‘Ћ <> nil) :
      лок”достоверение—— = лок”достоверение‘Ћ.Clone;
      лок”достоверение——.‘изЋицо = nil;
      лок”достоверение——.ѕолучатель‘изЋицо = лок‘изЋицо;
      --лок”достоверение——.ѕолучательѕособи€ = локѕолучательѕособи€;
      лок”достоверение——.“ипƒокумента—оц—трах = “ипƒокѕолуч”дЋичн;
      лок”достоверение——.Post;
    fi;
end;

--@doc создаетс€ нова€ запись страхового случа€ с пол€ми из лок—траховой—лучай
--запись страхового случа€ запоминаетс€ в лок—траховой—лучай
proc Ќовый—траховой—лучай (лок—траховой—лучай : Ёлементыƒанных.—траховой—лучай) ;
  var лок»нт : ƒанные.инт—траховой—лучай;
  var локѕараметры[2] : variant;
  var локЌовый—трах—лучай : ƒанные.—траховой—лучай;
    локѕараметры = лок—траховой—лучай.ѕараметрыЌового—трах—луча€;
    лок»нт = ƒанные.инт—траховой—лучай.—оздать;
    лок»нт.”становитьѕараметрыЌовой«аписи (локѕараметры);
    лок»нт.»нициализироватьѕо”молчанию;
    локЌовый—трах—лучай = лок»нт.Record;
    локЌовый—трах—лучай.Post;
    лок—траховой—лучай.«апомнить«апись—трах—луча€(локЌовый—трах—лучай);
    Ќовыйѕолучательѕособи€(локЌовый—трах—лучай);
    Ѕанк–еквизитыѕо”мол (локЌовый—трах—лучай);
end;

--@doc создаетс€ нова€ запись получател€ по записи страхового случа€
--дл€ записи нового получател€ заполн€ютс€ по умолчанию адрес и документы
proc Ќовыйѕолучательѕособи€ (лок—траховой—лучай : ƒанные.—траховой—лучай) ;
  var локѕолучательѕособи€ : Ёлементыƒанных.ѕолучательѕособи€;
  var лок»нт : ƒанные.интѕолучательѕособи€;
  var локѕараметры[2] : variant;
  var локѕолучатель : ƒанные.ѕолучательѕособи€;
    локѕолучательѕособи€ = Ёлементыƒанных.ѕолучательѕособи€.—оздатьѕо«аписи—убъекта(лок—траховой—лучай.—убъект);
    локѕолучательѕособи€.«апомнить—траховой—лучай(лок—траховой—лучай);
    локѕараметры  = локѕолучательѕособи€.ѕараметрыЌовой«аписи;
    лок»нт = ƒанные.интѕолучательѕособи€.—оздать;
    лок»нт.”становитьѕараметрыЌовой«аписи (локѕараметры);
    лок»нт.»нициализироватьѕо”молчанию;
    локѕолучатель = лок»нт.Record;
    локѕолучатель.Post;
    јдрес–егистрацииѕо”мол (локѕолучатель);
    ”дЋичностиѕо”мол (локѕолучатель);
end;

proc Ѕанк–еквизитыѕо”мол (лок—траховой—лучай : ƒанные.—траховой—лучай);
  var локЅанк–еквизиты‘Ћ : Ѕазовый.—правочники.Ѕанковские–еквизиты;
  var лок‘изЋицо : Ѕазовый.ƒанные.—убъект;
  var локЅанк–еквизиты—— : ƒанные.Ѕанк–еквизиты;
  var локЅанк–екв : Ёлементыƒанных.Ѕанк–еквизиты;
  var лок»нт‘Ћ : Ѕазовый.ƒанные.инт—убъект;
  var лок»нтЅанк : ƒанные.интЅанк–еквизиты;
  var локѕараметры[2] : variant;
    лок‘изЋицо = лок—траховой—лучай.—убъект.‘изЋицо;
    лок»нт‘Ћ = Ѕазовый.ƒанные.инт—убъект.ќткрытьѕо«аписи(лок‘изЋицо);
    локЅанк–еквизиты‘Ћ = лок»нт‘Ћ.ѕолучить–асчетный—чет—отрудника(nil);
    if (локЅанк–еквизиты‘Ћ <> nil) :
      локЅанк–екв  = Ёлементыƒанных.Ѕанк–еквизиты.—оздатьѕоЅазовой«аписи(локЅанк–еквизиты‘Ћ);
      локЅанк–екв.«апомнить—траховой—лучай(лок—траховой—лучай);
      локѕараметры  = локЅанк–екв.ѕараметрыЌовой«аписи;
      лок»нтЅанк = ƒанные.интЅанк–еквизиты.—оздать;
      лок»нтЅанк.”становитьѕараметрыЌовой«аписи (локѕараметры);
      лок»нтЅанк.»нициализироватьѕо”молчанию;
      локЅанк–еквизиты—— = лок»нтЅанк.Record;
      локЅанк–еквизиты——.Post;
    fi;
end;



end